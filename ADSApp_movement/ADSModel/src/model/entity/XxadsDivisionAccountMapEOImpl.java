package model.entity;

import java.math.BigDecimal;

import java.sql.Time;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 23 18:05:19 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxadsDivisionAccountMapEOImpl extends EntityImpl {
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("XXADS_DIVISION_ACCOUNT_MAP_S", this.getDBTransaction());
        setMappingId(seq.getSequenceNumber());
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        MappingId,
        BuId,
        Division,
        DivFlexValueId,
        EventType,
        DebitCredit,
        Account,
        AccountFlexValueId,
        SubAccount,
        SubAccountFlexValId,
        StartDate,
        EndDate,
        CreationDate,
        CreatedBy,
        LastUpdate,
        LastUpdatedBy,
        ObjectVersionNumber,
        LocationCode,
        LocationFlexValId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    private static final byte USERNAME_HISTORY_TYPE = 13;

    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
            if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
                    // Custom History type logic goes here
                    return (String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
            }
            return super.getHistoryContextForAttribute(attr);
    }


    public static final int MAPPINGID = AttributesEnum.MappingId.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int DIVFLEXVALUEID = AttributesEnum.DivFlexValueId.index();
    public static final int EVENTTYPE = AttributesEnum.EventType.index();
    public static final int DEBITCREDIT = AttributesEnum.DebitCredit.index();
    public static final int ACCOUNT = AttributesEnum.Account.index();
    public static final int ACCOUNTFLEXVALUEID = AttributesEnum.AccountFlexValueId.index();
    public static final int SUBACCOUNT = AttributesEnum.SubAccount.index();
    public static final int SUBACCOUNTFLEXVALID = AttributesEnum.SubAccountFlexValId.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATE = AttributesEnum.LastUpdate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int LOCATIONCODE = AttributesEnum.LocationCode.index();
    public static final int LOCATIONFLEXVALID = AttributesEnum.LocationFlexValId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxadsDivisionAccountMapEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxadsDivisionAccountMapEO");
    }


    /**
     * Gets the attribute value for MappingId, using the alias name MappingId.
     * @return the value of MappingId
     */
    public Number getMappingId() {
        return (Number) getAttributeInternal(MAPPINGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MappingId.
     * @param value value to set the MappingId
     */
    public void setMappingId(Number value) {
        setAttributeInternal(MAPPINGID, value);
    }

    /**
     * Gets the attribute value for BuId, using the alias name BuId.
     * @return the value of BuId
     */
    public Number getBuId() {
        return (Number) getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuId.
     * @param value value to set the BuId
     */
    public void setBuId(Number value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for Division, using the alias name Division.
     * @return the value of Division
     */
    public String getDivision() {
        return (String) getAttributeInternal(DIVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Division.
     * @param value value to set the Division
     */
    public void setDivision(String value) {
        setAttributeInternal(DIVISION, value);
    }

    /**
     * Gets the attribute value for DivFlexValueId, using the alias name DivFlexValueId.
     * @return the value of DivFlexValueId
     */
    public Number getDivFlexValueId() {
        return (Number) getAttributeInternal(DIVFLEXVALUEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivFlexValueId.
     * @param value value to set the DivFlexValueId
     */
    public void setDivFlexValueId(Number value) {
        setAttributeInternal(DIVFLEXVALUEID, value);
    }

    /**
     * Gets the attribute value for EventType, using the alias name EventType.
     * @return the value of EventType
     */
    public String getEventType() {
        return (String) getAttributeInternal(EVENTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EventType.
     * @param value value to set the EventType
     */
    public void setEventType(String value) {
        setAttributeInternal(EVENTTYPE, value);
    }

    /**
     * Gets the attribute value for DebitCredit, using the alias name DebitCredit.
     * @return the value of DebitCredit
     */
    public String getDebitCredit() {
        return (String) getAttributeInternal(DEBITCREDIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DebitCredit.
     * @param value value to set the DebitCredit
     */
    public void setDebitCredit(String value) {
        setAttributeInternal(DEBITCREDIT, value);
    }

    /**
     * Gets the attribute value for Account, using the alias name Account.
     * @return the value of Account
     */
    public String getAccount() {
        return (String) getAttributeInternal(ACCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Account.
     * @param value value to set the Account
     */
    public void setAccount(String value) {
        setAttributeInternal(ACCOUNT, value);
    }

    /**
     * Gets the attribute value for AccountFlexValueId, using the alias name AccountFlexValueId.
     * @return the value of AccountFlexValueId
     */
    public Number getAccountFlexValueId() {
        return (Number) getAttributeInternal(ACCOUNTFLEXVALUEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccountFlexValueId.
     * @param value value to set the AccountFlexValueId
     */
    public void setAccountFlexValueId(Number value) {
        setAttributeInternal(ACCOUNTFLEXVALUEID, value);
    }

    /**
     * Gets the attribute value for SubAccount, using the alias name SubAccount.
     * @return the value of SubAccount
     */
    public String getSubAccount() {
        return (String) getAttributeInternal(SUBACCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubAccount.
     * @param value value to set the SubAccount
     */
    public void setSubAccount(String value) {
        setAttributeInternal(SUBACCOUNT, value);
    }

    /**
     * Gets the attribute value for SubAccountFlexValId, using the alias name SubAccountFlexValId.
     * @return the value of SubAccountFlexValId
     */
    public Number getSubAccountFlexValId() {
        return (Number) getAttributeInternal(SUBACCOUNTFLEXVALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubAccountFlexValId.
     * @param value value to set the SubAccountFlexValId
     */
    public void setSubAccountFlexValId(Number value) {
        setAttributeInternal(SUBACCOUNTFLEXVALID, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the value of StartDate
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the value of EndDate
     */
    public Date getEndDate() {
        return (Date) getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for LastUpdate, using the alias name LastUpdate.
     * @return the value of LastUpdate
     */
    public Date getLastUpdate() {
        return (Date) getAttributeInternal(LASTUPDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Gets the attribute value for LocationCode, using the alias name LocationCode.
     * @return the value of LocationCode
     */
    public String getLocationCode() {
        return (String) getAttributeInternal(LOCATIONCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocationCode.
     * @param value value to set the LocationCode
     */
    public void setLocationCode(String value) {
        setAttributeInternal(LOCATIONCODE, value);
    }

    /**
     * Gets the attribute value for LocationFlexValId, using the alias name LocationFlexValId.
     * @return the value of LocationFlexValId
     */
    public Number getLocationFlexValId() {
        return (Number) getAttributeInternal(LOCATIONFLEXVALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocationFlexValId.
     * @param value value to set the LocationFlexValId
     */
    public void setLocationFlexValId(Number value) {
        setAttributeInternal(LOCATIONFLEXVALID, value);
    }

    /**
     * @param mappingId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number mappingId) {
        return new Key(new Object[] { mappingId });
    }


}

