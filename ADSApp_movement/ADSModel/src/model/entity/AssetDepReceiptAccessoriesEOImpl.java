package model.entity;


import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 27 19:26:32 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AssetDepReceiptAccessoriesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        DrAccessoryId,
        DrLineId,
        DrId,
        DoAccessoryId,
        DoLineId,
        AssetId,
        AssetAccessoryId,
        IncludeFlag,
        DeployedQuantiy,
        ReceivedQuantity,
        Remarks,
        CreationDate,
        CreatedBy,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("XXADS_DR_ACCESSORIES_S",getDBTransaction());
        setDrAccessoryId(seq.getSequenceNumber());
    }
    
    private static final byte USERNAME_HISTORY_TYPE =13;
    
    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
    if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
       // Custom History type logic goes here
      return (String) ((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
    }
    return super.getHistoryContextForAttribute(attr);
    }

    public static final int DRACCESSORYID = AttributesEnum.DrAccessoryId.index();
    public static final int DRLINEID = AttributesEnum.DrLineId.index();
    public static final int DRID = AttributesEnum.DrId.index();
    public static final int DOACCESSORYID = AttributesEnum.DoAccessoryId.index();
    public static final int DOLINEID = AttributesEnum.DoLineId.index();
    public static final int ASSETID = AttributesEnum.AssetId.index();
    public static final int ASSETACCESSORYID = AttributesEnum.AssetAccessoryId.index();
    public static final int INCLUDEFLAG = AttributesEnum.IncludeFlag.index();
    public static final int DEPLOYEDQUANTIY = AttributesEnum.DeployedQuantiy.index();
    public static final int RECEIVEDQUANTITY = AttributesEnum.ReceivedQuantity.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AssetDepReceiptAccessoriesEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.AssetDepReceiptAccessoriesEO");
    }

    /**
     * Gets the attribute value for DrAccessoryId, using the alias name DrAccessoryId.
     * @return the value of DrAccessoryId
     */
    public Number getDrAccessoryId() {
        return (Number) getAttributeInternal(DRACCESSORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DrAccessoryId.
     * @param value value to set the DrAccessoryId
     */
    public void setDrAccessoryId(Number value) {
        setAttributeInternal(DRACCESSORYID, value);
    }

    /**
     * Gets the attribute value for DrLineId, using the alias name DrLineId.
     * @return the value of DrLineId
     */
    public Number getDrLineId() {
        return (Number) getAttributeInternal(DRLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DrLineId.
     * @param value value to set the DrLineId
     */
    public void setDrLineId(Number value) {
        setAttributeInternal(DRLINEID, value);
    }

    /**
     * Gets the attribute value for DrId, using the alias name DrId.
     * @return the value of DrId
     */
    public Number getDrId() {
        return (Number) getAttributeInternal(DRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DrId.
     * @param value value to set the DrId
     */
    public void setDrId(Number value) {
        setAttributeInternal(DRID, value);
    }

    /**
     * Gets the attribute value for DoAccessoryId, using the alias name DoAccessoryId.
     * @return the value of DoAccessoryId
     */
    public Number getDoAccessoryId() {
        return (Number) getAttributeInternal(DOACCESSORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoAccessoryId.
     * @param value value to set the DoAccessoryId
     */
    public void setDoAccessoryId(Number value) {
        setAttributeInternal(DOACCESSORYID, value);
    }

    /**
     * Gets the attribute value for DoLineId, using the alias name DoLineId.
     * @return the value of DoLineId
     */
    public Number getDoLineId() {
        return (Number) getAttributeInternal(DOLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoLineId.
     * @param value value to set the DoLineId
     */
    public void setDoLineId(Number value) {
        setAttributeInternal(DOLINEID, value);
    }

    /**
     * Gets the attribute value for AssetId, using the alias name AssetId.
     * @return the value of AssetId
     */
    public Number getAssetId() {
        return (Number) getAttributeInternal(ASSETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetId.
     * @param value value to set the AssetId
     */
    public void setAssetId(Number value) {
        setAttributeInternal(ASSETID, value);
    }

    /**
     * Gets the attribute value for AssetAccessoryId, using the alias name AssetAccessoryId.
     * @return the value of AssetAccessoryId
     */
    public Number getAssetAccessoryId() {
        return (Number) getAttributeInternal(ASSETACCESSORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetAccessoryId.
     * @param value value to set the AssetAccessoryId
     */
    public void setAssetAccessoryId(Number value) {
        setAttributeInternal(ASSETACCESSORYID, value);
    }

    /**
     * Gets the attribute value for IncludeFlag, using the alias name IncludeFlag.
     * @return the value of IncludeFlag
     */
    public String getIncludeFlag() {
        return (String) getAttributeInternal(INCLUDEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for IncludeFlag.
     * @param value value to set the IncludeFlag
     */
    public void setIncludeFlag(String value) {
        setAttributeInternal(INCLUDEFLAG, value);
    }

    /**
     * Gets the attribute value for DeployedQuantiy, using the alias name DeployedQuantiy.
     * @return the value of DeployedQuantiy
     */
    public Number getDeployedQuantiy() {
        return (Number) getAttributeInternal(DEPLOYEDQUANTIY);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeployedQuantiy.
     * @param value value to set the DeployedQuantiy
     */
    public void setDeployedQuantiy(Number value) {
        setAttributeInternal(DEPLOYEDQUANTIY, value);
    }

    /**
     * Gets the attribute value for ReceivedQuantity, using the alias name ReceivedQuantity.
     * @return the value of ReceivedQuantity
     */
    public Number getReceivedQuantity() {
        return (Number) getAttributeInternal(RECEIVEDQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceivedQuantity.
     * @param value value to set the ReceivedQuantity
     */
    public void setReceivedQuantity(Number value) {
        setAttributeInternal(RECEIVEDQUANTITY, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * @param drAccessoryId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number drAccessoryId) {
        return new Key(new Object[] { drAccessoryId });
    }


}

