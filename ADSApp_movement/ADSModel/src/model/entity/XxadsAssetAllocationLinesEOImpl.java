package model.entity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 13 10:04:27 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxadsAssetAllocationLinesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        LineId,
        AllocationId,
        ContractLineId,
        ContractLineNum,
        RentalType,
        CategoryId,
        Quantity,
        QuantityDeployed,
        HiringBasisRuleId,
        Shift,
        OnHireDate,
        OffHireDate,
        Remarks,
        MasterContractLineId,
        CreationDate,
        CreatedBy,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        OperatorRequired,
        FuelRequired;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int ALLOCATIONID = AttributesEnum.AllocationId.index();
    public static final int CONTRACTLINEID = AttributesEnum.ContractLineId.index();
    public static final int CONTRACTLINENUM = AttributesEnum.ContractLineNum.index();
    public static final int RENTALTYPE = AttributesEnum.RentalType.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int QUANTITYDEPLOYED = AttributesEnum.QuantityDeployed.index();
    public static final int HIRINGBASISRULEID = AttributesEnum.HiringBasisRuleId.index();
    public static final int SHIFT = AttributesEnum.Shift.index();
    public static final int ONHIREDATE = AttributesEnum.OnHireDate.index();
    public static final int OFFHIREDATE = AttributesEnum.OffHireDate.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int MASTERCONTRACTLINEID = AttributesEnum.MasterContractLineId.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int OPERATORREQUIRED = AttributesEnum.OperatorRequired.index();
    public static final int FUELREQUIRED = AttributesEnum.FuelRequired.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxadsAssetAllocationLinesEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxadsAssetAllocationLinesEO");
    }


    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the value of LineId
     */
    public oracle.jbo.domain.Number getLineId() {
        return (oracle.jbo.domain.Number) getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(oracle.jbo.domain.Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for AllocationId, using the alias name AllocationId.
     * @return the value of AllocationId
     */
    public Number getAllocationId() {
        return (Number) getAttributeInternal(ALLOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocationId.
     * @param value value to set the AllocationId
     */
    public void setAllocationId(Number value) {
        setAttributeInternal(ALLOCATIONID, value);
    }

    /**
     * Gets the attribute value for ContractLineId, using the alias name ContractLineId.
     * @return the value of ContractLineId
     */
    public Number getContractLineId() {
        return (Number) getAttributeInternal(CONTRACTLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContractLineId.
     * @param value value to set the ContractLineId
     */
    public void setContractLineId(Number value) {
        setAttributeInternal(CONTRACTLINEID, value);
    }

    /**
     * Gets the attribute value for ContractLineNum, using the alias name ContractLineNum.
     * @return the value of ContractLineNum
     */
    public Number getContractLineNum() {
        return (Number) getAttributeInternal(CONTRACTLINENUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContractLineNum.
     * @param value value to set the ContractLineNum
     */
    public void setContractLineNum(Number value) {
        setAttributeInternal(CONTRACTLINENUM, value);
    }

    /**
     * Gets the attribute value for RentalType, using the alias name RentalType.
     * @return the value of RentalType
     */
    public String getRentalType() {
        return (String) getAttributeInternal(RENTALTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RentalType.
     * @param value value to set the RentalType
     */
    public void setRentalType(String value) {
        setAttributeInternal(RENTALTYPE, value);
    }

    /**
     * Gets the attribute value for CategoryId, using the alias name CategoryId.
     * @return the value of CategoryId
     */
    public Number getCategoryId() {
        return (Number) getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryId.
     * @param value value to set the CategoryId
     */
    public void setCategoryId(Number value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for Quantity, using the alias name Quantity.
     * @return the value of Quantity
     */
    public Number getQuantity() {
        return (Number) getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Quantity.
     * @param value value to set the Quantity
     */
    public void setQuantity(Number value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for QuantityDeployed, using the alias name QuantityDeployed.
     * @return the value of QuantityDeployed
     */
    public Number getQuantityDeployed() {
        return (Number) getAttributeInternal(QUANTITYDEPLOYED);
    }

    /**
     * Sets <code>value</code> as the attribute value for QuantityDeployed.
     * @param value value to set the QuantityDeployed
     */
    public void setQuantityDeployed(Number value) {
        setAttributeInternal(QUANTITYDEPLOYED, value);
    }

    /**
     * Gets the attribute value for HiringBasisRuleId, using the alias name HiringBasisRuleId.
     * @return the value of HiringBasisRuleId
     */
    public Number getHiringBasisRuleId() {
        return (Number) getAttributeInternal(HIRINGBASISRULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HiringBasisRuleId.
     * @param value value to set the HiringBasisRuleId
     */
    public void setHiringBasisRuleId(Number value) {
        setAttributeInternal(HIRINGBASISRULEID, value);
    }


    /**
     * Gets the attribute value for Shift, using the alias name Shift.
     * @return the value of Shift
     */
    public String getShift() {
        return (String) getAttributeInternal(SHIFT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shift.
     * @param value value to set the Shift
     */
    public void setShift(String value) {
        setAttributeInternal(SHIFT, value);
    }

    /**
     * Gets the attribute value for OnHireDate, using the alias name OnHireDate.
     * @return the value of OnHireDate
     */
    public Date getOnHireDate() {
        return (Date) getAttributeInternal(ONHIREDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OnHireDate.
     * @param value value to set the OnHireDate
     */
    public void setOnHireDate(Date value) {
        setAttributeInternal(ONHIREDATE, value);
    }

    /**
     * Gets the attribute value for OffHireDate, using the alias name OffHireDate.
     * @return the value of OffHireDate
     */
    public Date getOffHireDate() {
        return (Date) getAttributeInternal(OFFHIREDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OffHireDate.
     * @param value value to set the OffHireDate
     */
    public void setOffHireDate(Date value) {
        setAttributeInternal(OFFHIREDATE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for MasterContractLineId, using the alias name MasterContractLineId.
     * @return the value of MasterContractLineId
     */
    public Number getMasterContractLineId() {
        return (Number) getAttributeInternal(MASTERCONTRACTLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterContractLineId.
     * @param value value to set the MasterContractLineId
     */
    public void setMasterContractLineId(Number value) {
        setAttributeInternal(MASTERCONTRACTLINEID, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }


    /**
     * Gets the attribute value for OperatorRequired, using the alias name OperatorRequired.
     * @return the value of OperatorRequired
     */
    public String getOperatorRequired() {
        return (String) getAttributeInternal(OPERATORREQUIRED);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperatorRequired.
     * @param value value to set the OperatorRequired
     */
    public void setOperatorRequired(String value) {
        setAttributeInternal(OPERATORREQUIRED, value);
    }

    /**
     * Gets the attribute value for FuelRequired, using the alias name FuelRequired.
     * @return the value of FuelRequired
     */
    public String getFuelRequired() {
        return (String) getAttributeInternal(FUELREQUIRED);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuelRequired.
     * @param value value to set the FuelRequired
     */
    public void setFuelRequired(String value) {
        setAttributeInternal(FUELREQUIRED, value);
    }


    /**
     * @param lineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number lineId) {
        return new Key(new Object[] { lineId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    SequenceImpl seq = new SequenceImpl("XXADS_ASSET_ALLOCATION_LINES_S",getDBTransaction());
    setLineId(seq.getSequenceNumber());
    //        setAttachmentCode("PROBATION CONFIRMATION");
    }
    
    private static final byte USERNAME_HISTORY_TYPE =13;
    
    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
        if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
            // Custom History type logic goes here
            return (String) ((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
        }
        return super.getHistoryContextForAttribute(attr);
    }
}

