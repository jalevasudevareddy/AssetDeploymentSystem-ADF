package model.entity;

import java.math.BigDecimal;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 11 16:16:03 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxadsRentalQuoteLinesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        QuoteLineId,
        QuotationId,
        LineNum,
        RequestId,
        RequestLineId,
        RequestLineNum,
        RentalType,
        CategoryId,
        Quantity,
        HiringBasisRuleId,
        OperatorOption,
        FuelOption,
        MobilizationRequired,
        Shift,
        OnHireDate,
        OffHireDate,
        StandardRate,
        Ot1Rate,
        Ot2Rate,
        MarginPercentage,
        LineValue,
        MinChargeUnit,
        MinChargeValue,
        Remarks,
        ActiveFlag,
        ParentQuoteLineId,
        MasterQuoteLineId,
        ParentQuotationId,
        MasterQuotationId,
        CreationDate,
        CreatedBy,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        UnitRate,
        TaxRateCode,
        VatTaxAmount,
        TaxRateId,
        TaxRatePercent,
        CategoryDescription;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    private static final byte USERNAME_HISTORY_TYPE = 13;

    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
        if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
                // Custom History type logic goes here
                return (String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
        }
        return super.getHistoryContextForAttribute(attr);
    }


    public static final int QUOTELINEID = AttributesEnum.QuoteLineId.index();
    public static final int QUOTATIONID = AttributesEnum.QuotationId.index();
    public static final int LINENUM = AttributesEnum.LineNum.index();
    public static final int REQUESTID = AttributesEnum.RequestId.index();
    public static final int REQUESTLINEID = AttributesEnum.RequestLineId.index();
    public static final int REQUESTLINENUM = AttributesEnum.RequestLineNum.index();
    public static final int RENTALTYPE = AttributesEnum.RentalType.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int HIRINGBASISRULEID = AttributesEnum.HiringBasisRuleId.index();
    public static final int OPERATOROPTION = AttributesEnum.OperatorOption.index();
    public static final int FUELOPTION = AttributesEnum.FuelOption.index();
    public static final int MOBILIZATIONREQUIRED = AttributesEnum.MobilizationRequired.index();
    public static final int SHIFT = AttributesEnum.Shift.index();
    public static final int ONHIREDATE = AttributesEnum.OnHireDate.index();
    public static final int OFFHIREDATE = AttributesEnum.OffHireDate.index();
    public static final int STANDARDRATE = AttributesEnum.StandardRate.index();
    public static final int OT1RATE = AttributesEnum.Ot1Rate.index();
    public static final int OT2RATE = AttributesEnum.Ot2Rate.index();
    public static final int MARGINPERCENTAGE = AttributesEnum.MarginPercentage.index();
    public static final int LINEVALUE = AttributesEnum.LineValue.index();
    public static final int MINCHARGEUNIT = AttributesEnum.MinChargeUnit.index();
    public static final int MINCHARGEVALUE = AttributesEnum.MinChargeValue.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int PARENTQUOTELINEID = AttributesEnum.ParentQuoteLineId.index();
    public static final int MASTERQUOTELINEID = AttributesEnum.MasterQuoteLineId.index();
    public static final int PARENTQUOTATIONID = AttributesEnum.ParentQuotationId.index();
    public static final int MASTERQUOTATIONID = AttributesEnum.MasterQuotationId.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int UNITRATE = AttributesEnum.UnitRate.index();
    public static final int TAXRATECODE = AttributesEnum.TaxRateCode.index();
    public static final int VATTAXAMOUNT = AttributesEnum.VatTaxAmount.index();
    public static final int TAXRATEID = AttributesEnum.TaxRateId.index();
    public static final int TAXRATEPERCENT = AttributesEnum.TaxRatePercent.index();
    public static final int CATEGORYDESCRIPTION = AttributesEnum.CategoryDescription.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxadsRentalQuoteLinesEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxadsRentalQuoteLinesEO");
    }


    /**
     * Gets the attribute value for QuoteLineId, using the alias name QuoteLineId.
     * @return the value of QuoteLineId
     */
    public oracle.jbo.domain.Number getQuoteLineId() {
        return (oracle.jbo.domain.Number) getAttributeInternal(QUOTELINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for QuoteLineId.
     * @param value value to set the QuoteLineId
     */
    public void setQuoteLineId(oracle.jbo.domain.Number value) {
        setAttributeInternal(QUOTELINEID, value);
    }

    /**
     * Gets the attribute value for QuotationId, using the alias name QuotationId.
     * @return the value of QuotationId
     */
    public Number getQuotationId() {
        return (Number) getAttributeInternal(QUOTATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for QuotationId.
     * @param value value to set the QuotationId
     */
    public void setQuotationId(Number value) {
        setAttributeInternal(QUOTATIONID, value);
    }

    /**
     * Gets the attribute value for LineNum, using the alias name LineNum.
     * @return the value of LineNum
     */
    public Number getLineNum() {
        return (Number) getAttributeInternal(LINENUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineNum.
     * @param value value to set the LineNum
     */
    public void setLineNum(Number value) {
        setAttributeInternal(LINENUM, value);
    }

    /**
     * Gets the attribute value for RequestId, using the alias name RequestId.
     * @return the value of RequestId
     */
    public Number getRequestId() {
        return (Number) getAttributeInternal(REQUESTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestId.
     * @param value value to set the RequestId
     */
    public void setRequestId(Number value) {
        setAttributeInternal(REQUESTID, value);
    }

    /**
     * Gets the attribute value for RequestLineId, using the alias name RequestLineId.
     * @return the value of RequestLineId
     */
    public Number getRequestLineId() {
        return (Number) getAttributeInternal(REQUESTLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestLineId.
     * @param value value to set the RequestLineId
     */
    public void setRequestLineId(Number value) {
        setAttributeInternal(REQUESTLINEID, value);
    }

    /**
     * Gets the attribute value for RequestLineNum, using the alias name RequestLineNum.
     * @return the value of RequestLineNum
     */
    public Number getRequestLineNum() {
        return (Number) getAttributeInternal(REQUESTLINENUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestLineNum.
     * @param value value to set the RequestLineNum
     */
    public void setRequestLineNum(Number value) {
        setAttributeInternal(REQUESTLINENUM, value);
    }

    /**
     * Gets the attribute value for RentalType, using the alias name RentalType.
     * @return the value of RentalType
     */
    public String getRentalType() {
        return (String) getAttributeInternal(RENTALTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RentalType.
     * @param value value to set the RentalType
     */
    public void setRentalType(String value) {
        setAttributeInternal(RENTALTYPE, value);
    }

    /**
     * Gets the attribute value for CategoryId, using the alias name CategoryId.
     * @return the value of CategoryId
     */
    public Number getCategoryId() {
        return (Number) getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryId.
     * @param value value to set the CategoryId
     */
    public void setCategoryId(Number value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for Quantity, using the alias name Quantity.
     * @return the value of Quantity
     */
    public Number getQuantity() {
        return (Number) getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Quantity.
     * @param value value to set the Quantity
     */
    public void setQuantity(Number value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for HiringBasisRuleId, using the alias name HiringBasisRuleId.
     * @return the value of HiringBasisRuleId
     */
    public Number getHiringBasisRuleId() {
        return (Number) getAttributeInternal(HIRINGBASISRULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HiringBasisRuleId.
     * @param value value to set the HiringBasisRuleId
     */
    public void setHiringBasisRuleId(Number value) {
        setAttributeInternal(HIRINGBASISRULEID, value);
    }

    /**
     * Gets the attribute value for OperatorOption, using the alias name OperatorOption.
     * @return the value of OperatorOption
     */
    public String getOperatorOption() {
        return (String) getAttributeInternal(OPERATOROPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperatorOption.
     * @param value value to set the OperatorOption
     */
    public void setOperatorOption(String value) {
        setAttributeInternal(OPERATOROPTION, value);
    }

    /**
     * Gets the attribute value for FuelOption, using the alias name FuelOption.
     * @return the value of FuelOption
     */
    public String getFuelOption() {
        return (String) getAttributeInternal(FUELOPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuelOption.
     * @param value value to set the FuelOption
     */
    public void setFuelOption(String value) {
        setAttributeInternal(FUELOPTION, value);
    }

    /**
     * Gets the attribute value for MobilizationRequired, using the alias name MobilizationRequired.
     * @return the value of MobilizationRequired
     */
    public String getMobilizationRequired() {
        return (String) getAttributeInternal(MOBILIZATIONREQUIRED);
    }

    /**
     * Sets <code>value</code> as the attribute value for MobilizationRequired.
     * @param value value to set the MobilizationRequired
     */
    public void setMobilizationRequired(String value) {
        setAttributeInternal(MOBILIZATIONREQUIRED, value);
    }

    /**
     * Gets the attribute value for Shift, using the alias name Shift.
     * @return the value of Shift
     */
    public String getShift() {
        return (String) getAttributeInternal(SHIFT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shift.
     * @param value value to set the Shift
     */
    public void setShift(String value) {
        setAttributeInternal(SHIFT, value);
    }

    /**
     * Gets the attribute value for OnHireDate, using the alias name OnHireDate.
     * @return the value of OnHireDate
     */
    public Date getOnHireDate() {
        return (Date) getAttributeInternal(ONHIREDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OnHireDate.
     * @param value value to set the OnHireDate
     */
    public void setOnHireDate(Date value) {
        setAttributeInternal(ONHIREDATE, value);
    }

    /**
     * Gets the attribute value for OffHireDate, using the alias name OffHireDate.
     * @return the value of OffHireDate
     */
    public Date getOffHireDate() {
        return (Date) getAttributeInternal(OFFHIREDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OffHireDate.
     * @param value value to set the OffHireDate
     */
    public void setOffHireDate(Date value) {
        setAttributeInternal(OFFHIREDATE, value);
    }

    /**
     * Gets the attribute value for StandardRate, using the alias name StandardRate.
     * @return the value of StandardRate
     */
    public Number getStandardRate() {
        return (Number) getAttributeInternal(STANDARDRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StandardRate.
     * @param value value to set the StandardRate
     */
    public void setStandardRate(Number value) {
        setAttributeInternal(STANDARDRATE, value);
    }

    /**
     * Gets the attribute value for Ot1Rate, using the alias name Ot1Rate.
     * @return the value of Ot1Rate
     */
    public Number getOt1Rate() {
        return (Number) getAttributeInternal(OT1RATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ot1Rate.
     * @param value value to set the Ot1Rate
     */
    public void setOt1Rate(Number value) {
        setAttributeInternal(OT1RATE, value);
    }

    /**
     * Gets the attribute value for Ot2Rate, using the alias name Ot2Rate.
     * @return the value of Ot2Rate
     */
    public Number getOt2Rate() {
        return (Number) getAttributeInternal(OT2RATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ot2Rate.
     * @param value value to set the Ot2Rate
     */
    public void setOt2Rate(Number value) {
        setAttributeInternal(OT2RATE, value);
    }

    /**
     * Gets the attribute value for MarginPercentage, using the alias name MarginPercentage.
     * @return the value of MarginPercentage
     */
    public Number getMarginPercentage() {
        return (Number) getAttributeInternal(MARGINPERCENTAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MarginPercentage.
     * @param value value to set the MarginPercentage
     */
    public void setMarginPercentage(Number value) {
        setAttributeInternal(MARGINPERCENTAGE, value);
    }

    /**
     * Gets the attribute value for LineValue, using the alias name LineValue.
     * @return the value of LineValue
     */
    public Number getLineValue() {
        return (Number) getAttributeInternal(LINEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineValue.
     * @param value value to set the LineValue
     */
    public void setLineValue(Number value) {
        setAttributeInternal(LINEVALUE, value);
    }

    /**
     * Gets the attribute value for MinChargeUnit, using the alias name MinChargeUnit.
     * @return the value of MinChargeUnit
     */
    public String getMinChargeUnit() {
        return (String) getAttributeInternal(MINCHARGEUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinChargeUnit.
     * @param value value to set the MinChargeUnit
     */
    public void setMinChargeUnit(String value) {
        setAttributeInternal(MINCHARGEUNIT, value);
    }

    /**
     * Gets the attribute value for MinChargeValue, using the alias name MinChargeValue.
     * @return the value of MinChargeValue
     */
    public Number getMinChargeValue() {
        return (Number) getAttributeInternal(MINCHARGEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinChargeValue.
     * @param value value to set the MinChargeValue
     */
    public void setMinChargeValue(Number value) {
        setAttributeInternal(MINCHARGEVALUE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for ActiveFlag, using the alias name ActiveFlag.
     * @return the value of ActiveFlag
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveFlag.
     * @param value value to set the ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for ParentQuoteLineId, using the alias name ParentQuoteLineId.
     * @return the value of ParentQuoteLineId
     */
    public Number getParentQuoteLineId() {
        return (Number) getAttributeInternal(PARENTQUOTELINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentQuoteLineId.
     * @param value value to set the ParentQuoteLineId
     */
    public void setParentQuoteLineId(Number value) {
        setAttributeInternal(PARENTQUOTELINEID, value);
    }

    /**
     * Gets the attribute value for MasterQuoteLineId, using the alias name MasterQuoteLineId.
     * @return the value of MasterQuoteLineId
     */
    public Number getMasterQuoteLineId() {
        return (Number) getAttributeInternal(MASTERQUOTELINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterQuoteLineId.
     * @param value value to set the MasterQuoteLineId
     */
    public void setMasterQuoteLineId(Number value) {
        setAttributeInternal(MASTERQUOTELINEID, value);
    }

    /**
     * Gets the attribute value for ParentQuotationId, using the alias name ParentQuotationId.
     * @return the value of ParentQuotationId
     */
    public Number getParentQuotationId() {
        return (Number) getAttributeInternal(PARENTQUOTATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentQuotationId.
     * @param value value to set the ParentQuotationId
     */
    public void setParentQuotationId(Number value) {
        setAttributeInternal(PARENTQUOTATIONID, value);
    }

    /**
     * Gets the attribute value for MasterQuotationId, using the alias name MasterQuotationId.
     * @return the value of MasterQuotationId
     */
    public Number getMasterQuotationId() {
        return (Number) getAttributeInternal(MASTERQUOTATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterQuotationId.
     * @param value value to set the MasterQuotationId
     */
    public void setMasterQuotationId(Number value) {
        setAttributeInternal(MASTERQUOTATIONID, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }


    /**
     * Gets the attribute value for UnitRate, using the alias name UnitRate.
     * @return the value of UnitRate
     */
    public Number getUnitRate() {
        return (Number) getAttributeInternal(UNITRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnitRate.
     * @param value value to set the UnitRate
     */
    public void setUnitRate(Number value) {
        setAttributeInternal(UNITRATE, value);
    }


    /**
     * Gets the attribute value for TaxRateCode, using the alias name TaxRateCode.
     * @return the value of TaxRateCode
     */
    public String getTaxRateCode() {
        return (String) getAttributeInternal(TAXRATECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRateCode.
     * @param value value to set the TaxRateCode
     */
    public void setTaxRateCode(String value) {
        setAttributeInternal(TAXRATECODE, value);
    }

    /**
     * Gets the attribute value for VatTaxAmount, using the alias name VatTaxAmount.
     * @return the value of VatTaxAmount
     */
    public Number getVatTaxAmount() {
        return (Number) getAttributeInternal(VATTAXAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for VatTaxAmount.
     * @param value value to set the VatTaxAmount
     */
    public void setVatTaxAmount(Number value) {
        setAttributeInternal(VATTAXAMOUNT, value);
    }

    /**
     * Gets the attribute value for TaxRateId, using the alias name TaxRateId.
     * @return the value of TaxRateId
     */
    public Number getTaxRateId() {
        return (Number) getAttributeInternal(TAXRATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRateId.
     * @param value value to set the TaxRateId
     */
    public void setTaxRateId(Number value) {
        setAttributeInternal(TAXRATEID, value);
    }

    /**
     * Gets the attribute value for TaxRatePercent, using the alias name TaxRatePercent.
     * @return the value of TaxRatePercent
     */
    public Number getTaxRatePercent() {
        return (Number) getAttributeInternal(TAXRATEPERCENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRatePercent.
     * @param value value to set the TaxRatePercent
     */
    public void setTaxRatePercent(Number value) {
        setAttributeInternal(TAXRATEPERCENT, value);
    }


    /**
     * Gets the attribute value for CategoryDescription, using the alias name CategoryDescription.
     * @return the value of CategoryDescription
     */
    public String getCategoryDescription() {
        return (String) getAttributeInternal(CATEGORYDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryDescription.
     * @param value value to set the CategoryDescription
     */
    public void setCategoryDescription(String value) {
        setAttributeInternal(CATEGORYDESCRIPTION, value);
    }

    /**
     * @param quoteLineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number quoteLineId) {
        return new Key(new Object[] { quoteLineId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("xxads_rental_quote_lines_s", this.getDBTransaction());
        Number n = new Number(seq.getSequenceNumber());
        setQuoteLineId(n);
        setMasterQuoteLineId(n);
        setParentQuoteLineId(n);
        setActiveFlag("N");
    }
}

