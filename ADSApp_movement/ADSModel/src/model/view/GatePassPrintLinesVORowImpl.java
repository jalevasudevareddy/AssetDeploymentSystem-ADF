package model.view;

import java.math.BigDecimal;

import model.entity.XxadsGatePassReportLinesEOImpl;

import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Apr 28 18:25:17 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class GatePassPrintLinesVORowImpl extends ViewRowImpl {


    public static final int ENTITY_XXADSGATEPASSREPORTLINESEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ContractId,
        DoId,
        DoLineId,
        Quantity,
        UnitRate;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int DOID = AttributesEnum.DoId.index();
    public static final int DOLINEID = AttributesEnum.DoLineId.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int UNITRATE = AttributesEnum.UnitRate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public GatePassPrintLinesVORowImpl() {
    }

    /**
     * Gets XxadsGatePassReportLinesEO entity object.
     * @return the XxadsGatePassReportLinesEO
     */
    public XxadsGatePassReportLinesEOImpl getXxadsGatePassReportLinesEO() {
        return (XxadsGatePassReportLinesEOImpl) getEntity(ENTITY_XXADSGATEPASSREPORTLINESEO);
    }


    /**
     * Gets the attribute value for CONTRACT_ID using the alias name ContractId.
     * @return the CONTRACT_ID
     */
    public Number getContractId() {
        return (Number) getAttributeInternal(CONTRACTID);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTRACT_ID using the alias name ContractId.
     * @param value value to set the CONTRACT_ID
     */
    public void setContractId(Number value) {
        setAttributeInternal(CONTRACTID, value);
    }

    /**
     * Gets the attribute value for DO_ID using the alias name DoId.
     * @return the DO_ID
     */
    public Number getDoId() {
        return (Number) getAttributeInternal(DOID);
    }

    /**
     * Sets <code>value</code> as attribute value for DO_ID using the alias name DoId.
     * @param value value to set the DO_ID
     */
    public void setDoId(Number value) {
        setAttributeInternal(DOID, value);
    }

    /**
     * Gets the attribute value for DO_LINE_ID using the alias name DoLineId.
     * @return the DO_LINE_ID
     */
    public Number getDoLineId() {
        return (Number) getAttributeInternal(DOLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for DO_LINE_ID using the alias name DoLineId.
     * @param value value to set the DO_LINE_ID
     */
    public void setDoLineId(Number value) {
        setAttributeInternal(DOLINEID, value);
    }


    /**
     * Gets the attribute value for QUANTITY using the alias name Quantity.
     * @return the QUANTITY
     */
    public Number getQuantity() {
        return (Number) getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for QUANTITY using the alias name Quantity.
     * @param value value to set the QUANTITY
     */
    public void setQuantity(Number value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for UNIT_RATE using the alias name UnitRate.
     * @return the UNIT_RATE
     */
    public Number getUnitRate() {
        return (Number) getAttributeInternal(UNITRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for UNIT_RATE using the alias name UnitRate.
     * @param value value to set the UNIT_RATE
     */
    public void setUnitRate(Number value) {
        setAttributeInternal(UNITRATE, value);
    }
}

