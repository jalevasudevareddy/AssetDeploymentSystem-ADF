package model.view;

import java.math.BigDecimal;

import model.entity.XxadsDoAccessoriesEOImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 27 12:42:50 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DeploymentOrderAccessoriesVORowImpl extends ViewRowImpl {


    public static final int ENTITY_XXADSDOACCESSORIESEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        AssetAccessoryId,
        AssetId,
        CreatedBy,
        CreationDate,
        DoAccessoryId,
        DoId,
        DoLineId,
        IncludeFlag,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        Remarks,
        TransAccAssetNumber,
        TransAccPlateNumber,
        TransAccAssetDesc,
        TransAssetAccesory,
        Quantity;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ASSETACCESSORYID = AttributesEnum.AssetAccessoryId.index();
    public static final int ASSETID = AttributesEnum.AssetId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DOACCESSORYID = AttributesEnum.DoAccessoryId.index();
    public static final int DOID = AttributesEnum.DoId.index();
    public static final int DOLINEID = AttributesEnum.DoLineId.index();
    public static final int INCLUDEFLAG = AttributesEnum.IncludeFlag.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int TRANSACCASSETNUMBER = AttributesEnum.TransAccAssetNumber.index();
    public static final int TRANSACCPLATENUMBER = AttributesEnum.TransAccPlateNumber.index();
    public static final int TRANSACCASSETDESC = AttributesEnum.TransAccAssetDesc.index();
    public static final int TRANSASSETACCESORY = AttributesEnum.TransAssetAccesory.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DeploymentOrderAccessoriesVORowImpl() {
    }

    /**
     * Gets XxadsDoAccessoriesEO entity object.
     * @return the XxadsDoAccessoriesEO
     */
    public XxadsDoAccessoriesEOImpl getXxadsDoAccessoriesEO() {
        return (XxadsDoAccessoriesEOImpl) getEntity(ENTITY_XXADSDOACCESSORIESEO);
    }

    /**
     * Gets the attribute value for ASSET_ACCESSORY_ID using the alias name AssetAccessoryId.
     * @return the ASSET_ACCESSORY_ID
     */
    public Number getAssetAccessoryId() {
        return (Number) getAttributeInternal(ASSETACCESSORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSET_ACCESSORY_ID using the alias name AssetAccessoryId.
     * @param value value to set the ASSET_ACCESSORY_ID
     */
    public void setAssetAccessoryId(Number value) {
        setAttributeInternal(ASSETACCESSORYID, value);
    }

    /**
     * Gets the attribute value for ASSET_ID using the alias name AssetId.
     * @return the ASSET_ID
     */
    public Number getAssetId() {
        return (Number) getAttributeInternal(ASSETID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSET_ID using the alias name AssetId.
     * @param value value to set the ASSET_ID
     */
    public void setAssetId(Number value) {
        setAttributeInternal(ASSETID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for DO_ACCESSORY_ID using the alias name DoAccessoryId.
     * @return the DO_ACCESSORY_ID
     */
    public Number getDoAccessoryId() {
        return (Number) getAttributeInternal(DOACCESSORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for DO_ACCESSORY_ID using the alias name DoAccessoryId.
     * @param value value to set the DO_ACCESSORY_ID
     */
    public void setDoAccessoryId(Number value) {
        setAttributeInternal(DOACCESSORYID, value);
    }

    /**
     * Gets the attribute value for DO_ID using the alias name DoId.
     * @return the DO_ID
     */
    public Number getDoId() {
        return (Number) getAttributeInternal(DOID);
    }

    /**
     * Sets <code>value</code> as attribute value for DO_ID using the alias name DoId.
     * @param value value to set the DO_ID
     */
    public void setDoId(Number value) {
        setAttributeInternal(DOID, value);
    }

    /**
     * Gets the attribute value for DO_LINE_ID using the alias name DoLineId.
     * @return the DO_LINE_ID
     */
    public Number getDoLineId() {
        return (Number) getAttributeInternal(DOLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for DO_LINE_ID using the alias name DoLineId.
     * @param value value to set the DO_LINE_ID
     */
    public void setDoLineId(Number value) {
        setAttributeInternal(DOLINEID, value);
    }

    /**
     * Gets the attribute value for INCLUDE_FLAG using the alias name IncludeFlag.
     * @return the INCLUDE_FLAG
     */
    public String getIncludeFlag() {
        return (String) getAttributeInternal(INCLUDEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for INCLUDE_FLAG using the alias name IncludeFlag.
     * @param value value to set the INCLUDE_FLAG
     */
    public void setIncludeFlag(String value) {
        setAttributeInternal(INCLUDEFLAG, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber.
     * @return the OBJECT_VERSION_NUMBER
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }


    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAssetNumber.
     * @return the TransAssetNumber
     */
    public String getTransAccAssetNumber() {
        return (String) getAttributeInternal(TRANSACCASSETNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAssetNumber.
     * @param value value to set the  TransAssetNumber
     */
    public void setTransAccAssetNumber(String value) {
        setAttributeInternal(TRANSACCASSETNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAccPlateNumber.
     * @return the TransAccPlateNumber
     */
    public String getTransAccPlateNumber() {
        return (String) getAttributeInternal(TRANSACCPLATENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAccPlateNumber.
     * @param value value to set the  TransAccPlateNumber
     */
    public void setTransAccPlateNumber(String value) {
        setAttributeInternal(TRANSACCPLATENUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAccAssetDesc.
     * @return the TransAccAssetDesc
     */
    public String getTransAccAssetDesc() {
        return (String) getAttributeInternal(TRANSACCASSETDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAccAssetDesc.
     * @param value value to set the  TransAccAssetDesc
     */
    public void setTransAccAssetDesc(String value) {
        setAttributeInternal(TRANSACCASSETDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAssetAccesory.
     * @return the TransAssetAccesory
     */
    public String getTransAssetAccesory() {
        return (String) getAttributeInternal(TRANSASSETACCESORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAssetAccesory.
     * @param value value to set the  TransAssetAccesory
     */
    public void setTransAssetAccesory(String value) {
        setAttributeInternal(TRANSASSETACCESORY, value);
    }

    /**
     * Gets the attribute value for QUANTITY using the alias name Quantity.
     * @return the QUANTITY
     */
    public Number getQuantity() {
        return (Number) getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for QUANTITY using the alias name Quantity.
     * @param value value to set the QUANTITY
     */
    public void setQuantity(Number value) {
        setAttributeInternal(QUANTITY, value);
    }
}

