package model.view;

import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 14 18:34:46 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContractChargesPopulateVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Amount,
        AssetCategoryId,
        Billing,
        ChargeType,
        MasterQuotationId,
        MasterQuoteChargeId,
        ParentQuotationId,
        ParentQuoteChargeId,
        QuotationId,
        QuoteChargeId,
        TransAssetCategory,
        TransAssetCategoryDesc,
        TransChargeType,
        TransBilling,
        RentalType;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int ASSETCATEGORYID = AttributesEnum.AssetCategoryId.index();
    public static final int BILLING = AttributesEnum.Billing.index();
    public static final int CHARGETYPE = AttributesEnum.ChargeType.index();
    public static final int MASTERQUOTATIONID = AttributesEnum.MasterQuotationId.index();
    public static final int MASTERQUOTECHARGEID = AttributesEnum.MasterQuoteChargeId.index();
    public static final int PARENTQUOTATIONID = AttributesEnum.ParentQuotationId.index();
    public static final int PARENTQUOTECHARGEID = AttributesEnum.ParentQuoteChargeId.index();
    public static final int QUOTATIONID = AttributesEnum.QuotationId.index();
    public static final int QUOTECHARGEID = AttributesEnum.QuoteChargeId.index();
    public static final int TRANSASSETCATEGORY = AttributesEnum.TransAssetCategory.index();
    public static final int TRANSASSETCATEGORYDESC = AttributesEnum.TransAssetCategoryDesc.index();
    public static final int TRANSCHARGETYPE = AttributesEnum.TransChargeType.index();
    public static final int TRANSBILLING = AttributesEnum.TransBilling.index();
    public static final int RENTALTYPE = AttributesEnum.RentalType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ContractChargesPopulateVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Amount.
     * @return the Amount
     */
    public oracle.jbo.domain.Number getAmount() {
        return (oracle.jbo.domain.Number) getAttributeInternal(AMOUNT);
    }

    /**
     * Gets the attribute value for the calculated attribute AssetCategoryId.
     * @return the AssetCategoryId
     */
    public Number getAssetCategoryId() {
        return (Number) getAttributeInternal(ASSETCATEGORYID);
    }

    /**
     * Gets the attribute value for the calculated attribute Billing.
     * @return the Billing
     */
    public String getBilling() {
        return (String) getAttributeInternal(BILLING);
    }

    /**
     * Gets the attribute value for the calculated attribute ChargeType.
     * @return the ChargeType
     */
    public String getChargeType() {
        return (String) getAttributeInternal(CHARGETYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute MasterQuotationId.
     * @return the MasterQuotationId
     */
    public Number getMasterQuotationId() {
        return (Number) getAttributeInternal(MASTERQUOTATIONID);
    }

    /**
     * Gets the attribute value for the calculated attribute MasterQuoteChargeId.
     * @return the MasterQuoteChargeId
     */
    public Number getMasterQuoteChargeId() {
        return (Number) getAttributeInternal(MASTERQUOTECHARGEID);
    }

    /**
     * Gets the attribute value for the calculated attribute ParentQuotationId.
     * @return the ParentQuotationId
     */
    public Number getParentQuotationId() {
        return (Number) getAttributeInternal(PARENTQUOTATIONID);
    }

    /**
     * Gets the attribute value for the calculated attribute ParentQuoteChargeId.
     * @return the ParentQuoteChargeId
     */
    public Number getParentQuoteChargeId() {
        return (Number) getAttributeInternal(PARENTQUOTECHARGEID);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotationId.
     * @return the QuotationId
     */
    public Number getQuotationId() {
        return (Number) getAttributeInternal(QUOTATIONID);
    }

    /**
     * Gets the attribute value for the calculated attribute QuoteChargeId.
     * @return the QuoteChargeId
     */
    public Number getQuoteChargeId() {
        return (Number) getAttributeInternal(QUOTECHARGEID);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAssetCategory.
     * @return the TransAssetCategory
     */
    public String getTransAssetCategory() {
        return (String) getAttributeInternal(TRANSASSETCATEGORY);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAssetCategoryDesc.
     * @return the TransAssetCategoryDesc
     */
    public String getTransAssetCategoryDesc() {
        return (String) getAttributeInternal(TRANSASSETCATEGORYDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute TransChargeType.
     * @return the TransChargeType
     */
    public String getTransChargeType() {
        return (String) getAttributeInternal(TRANSCHARGETYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBilling.
     * @return the TransBilling
     */
    public String getTransBilling() {
        return (String) getAttributeInternal(TRANSBILLING);
    }

    /**
     * Gets the attribute value for the calculated attribute RentalType.
     * @return the RentalType
     */
    public String getRentalType() {
        return (String) getAttributeInternal(RENTALTYPE);
    }
}

