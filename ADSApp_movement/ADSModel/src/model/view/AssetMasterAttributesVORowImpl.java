package model.view;

import model.entity.XxadsAssetMasterAttributesEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 26 16:16:34 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AssetMasterAttributesVORowImpl extends ViewRowImpl {


    public static final int ENTITY_XXADSASSETMASTERATTRIBUTESEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        AssetAttrId,
        AssetId,
        AttributeValue,
        CategoryAttrId,
        CreatedBy,
        CreationDate,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        TransAttributeName,
        TransDataType,
        TransRequired,
        TransLov,
        TransAttributeValue,
        TransAttributeDateValue,
        LookupsLOV1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ASSETATTRID = AttributesEnum.AssetAttrId.index();
    public static final int ASSETID = AttributesEnum.AssetId.index();
    public static final int ATTRIBUTEVALUE = AttributesEnum.AttributeValue.index();
    public static final int CATEGORYATTRID = AttributesEnum.CategoryAttrId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int TRANSATTRIBUTENAME = AttributesEnum.TransAttributeName.index();
    public static final int TRANSDATATYPE = AttributesEnum.TransDataType.index();
    public static final int TRANSREQUIRED = AttributesEnum.TransRequired.index();
    public static final int TRANSLOV = AttributesEnum.TransLov.index();
    public static final int TRANSATTRIBUTEVALUE = AttributesEnum.TransAttributeValue.index();
    public static final int TRANSATTRIBUTEDATEVALUE = AttributesEnum.TransAttributeDateValue.index();
    public static final int LOOKUPSLOV1 = AttributesEnum.LookupsLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AssetMasterAttributesVORowImpl() {
    }

    /**
     * Gets XxadsAssetMasterAttributesEO entity object.
     * @return the XxadsAssetMasterAttributesEO
     */
    public XxadsAssetMasterAttributesEOImpl getXxadsAssetMasterAttributesEO() {
        return (XxadsAssetMasterAttributesEOImpl) getEntity(ENTITY_XXADSASSETMASTERATTRIBUTESEO);
    }

    /**
     * Gets the attribute value for ASSET_ATTR_ID using the alias name AssetAttrId.
     * @return the ASSET_ATTR_ID
     */
    public Number getAssetAttrId() {
        return (Number) getAttributeInternal(ASSETATTRID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSET_ATTR_ID using the alias name AssetAttrId.
     * @param value value to set the ASSET_ATTR_ID
     */
    public void setAssetAttrId(Number value) {
        setAttributeInternal(ASSETATTRID, value);
    }

    /**
     * Gets the attribute value for ASSET_ID using the alias name AssetId.
     * @return the ASSET_ID
     */
    public Number getAssetId() {
        return (Number) getAttributeInternal(ASSETID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSET_ID using the alias name AssetId.
     * @param value value to set the ASSET_ID
     */
    public void setAssetId(Number value) {
        setAttributeInternal(ASSETID, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE_VALUE using the alias name AttributeValue.
     * @return the ATTRIBUTE_VALUE
     */
    public String getAttributeValue() {
        return (String) getAttributeInternal(ATTRIBUTEVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE_VALUE using the alias name AttributeValue.
     * @param value value to set the ATTRIBUTE_VALUE
     */
    public void setAttributeValue(String value) {
        setAttributeInternal(ATTRIBUTEVALUE, value);
    }

    /**
     * Gets the attribute value for CATEGORY_ATTR_ID using the alias name CategoryAttrId.
     * @return the CATEGORY_ATTR_ID
     */
    public Number getCategoryAttrId() {
        return (Number) getAttributeInternal(CATEGORYATTRID);
    }

    /**
     * Sets <code>value</code> as attribute value for CATEGORY_ATTR_ID using the alias name CategoryAttrId.
     * @param value value to set the CATEGORY_ATTR_ID
     */
    public void setCategoryAttrId(Number value) {
        setAttributeInternal(CATEGORYATTRID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber.
     * @return the OBJECT_VERSION_NUMBER
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAttributeName.
     * @return the TransAttributeName
     */
    public String getTransAttributeName() {
        return (String) getAttributeInternal(TRANSATTRIBUTENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAttributeName.
     * @param value value to set the  TransAttributeName
     */
    public void setTransAttributeName(String value) {
        setAttributeInternal(TRANSATTRIBUTENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDataType.
     * @return the TransDataType
     */
    public String getTransDataType() {
        return (String) getAttributeInternal(TRANSDATATYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDataType.
     * @param value value to set the  TransDataType
     */
    public void setTransDataType(String value) {
        setAttributeInternal(TRANSDATATYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRequired.
     * @return the TransRequired
     */
    public String getTransRequired() {
        return (String) getAttributeInternal(TRANSREQUIRED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRequired.
     * @param value value to set the  TransRequired
     */
    public void setTransRequired(String value) {
        setAttributeInternal(TRANSREQUIRED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLov.
     * @return the TransLov
     */
    public String getTransLov() {
        return (String) getAttributeInternal(TRANSLOV);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLov.
     * @param value value to set the  TransLov
     */
    public void setTransLov(String value) {
        setAttributeInternal(TRANSLOV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAttributeValue.
     * @return the TransAttributeValue
     */
    public String getTransAttributeValue() {
        return (String) getAttributeInternal(TRANSATTRIBUTEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAttributeValue.
     * @param value value to set the  TransAttributeValue
     */
    public void setTransAttributeValue(String value) {
        setAttributeInternal(TRANSATTRIBUTEVALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAttributeDateValue.
     * @return the TransAttributeDateValue
     */
    public Date getTransAttributeDateValue() {
        return (Date) getAttributeInternal(TRANSATTRIBUTEDATEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAttributeDateValue.
     * @param value value to set the  TransAttributeDateValue
     */
    public void setTransAttributeDateValue(Date value) {
        setAttributeInternal(TRANSATTRIBUTEDATEVALUE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LookupsLOV1.
     */
    public RowSet getLookupsLOV1() {
        return (RowSet) getAttributeInternal(LOOKUPSLOV1);
    }


}

