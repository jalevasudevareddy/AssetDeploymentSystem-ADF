package model.view;

import model.entity.XxadsAssetHierarchyEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 26 16:19:20 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AssetHierarchyVORowImpl extends ViewRowImpl {


    public static final int ENTITY_XXADSASSETHIERARCHYEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        AssetId,
        AttachedDate,
        CreatedBy,
        CreationDate,
        DetachedDate,
        HierarchyId,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        ParentAssetId,
        TransParentAssetNumber,
        TransParentAssetDescr,
        AssetLovVO1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ASSETID = AttributesEnum.AssetId.index();
    public static final int ATTACHEDDATE = AttributesEnum.AttachedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DETACHEDDATE = AttributesEnum.DetachedDate.index();
    public static final int HIERARCHYID = AttributesEnum.HierarchyId.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int PARENTASSETID = AttributesEnum.ParentAssetId.index();
    public static final int TRANSPARENTASSETNUMBER = AttributesEnum.TransParentAssetNumber.index();
    public static final int TRANSPARENTASSETDESCR = AttributesEnum.TransParentAssetDescr.index();
    public static final int ASSETLOVVO1 = AttributesEnum.AssetLovVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AssetHierarchyVORowImpl() {
    }

    /**
     * Gets XxadsAssetHierarchyEO entity object.
     * @return the XxadsAssetHierarchyEO
     */
    public XxadsAssetHierarchyEOImpl getXxadsAssetHierarchyEO() {
        return (XxadsAssetHierarchyEOImpl) getEntity(ENTITY_XXADSASSETHIERARCHYEO);
    }

    /**
     * Gets the attribute value for ASSET_ID using the alias name AssetId.
     * @return the ASSET_ID
     */
    public Number getAssetId() {
        return (Number) getAttributeInternal(ASSETID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSET_ID using the alias name AssetId.
     * @param value value to set the ASSET_ID
     */
    public void setAssetId(Number value) {
        setAttributeInternal(ASSETID, value);
    }

    /**
     * Gets the attribute value for ATTACHED_DATE using the alias name AttachedDate.
     * @return the ATTACHED_DATE
     */
    public Date getAttachedDate() {
        return (Date) getAttributeInternal(ATTACHEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHED_DATE using the alias name AttachedDate.
     * @param value value to set the ATTACHED_DATE
     */
    public void setAttachedDate(Date value) {
        setAttributeInternal(ATTACHEDDATE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for DETACHED_DATE using the alias name DetachedDate.
     * @return the DETACHED_DATE
     */
    public Date getDetachedDate() {
        return (Date) getAttributeInternal(DETACHEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DETACHED_DATE using the alias name DetachedDate.
     * @param value value to set the DETACHED_DATE
     */
    public void setDetachedDate(Date value) {
        setAttributeInternal(DETACHEDDATE, value);
    }

    /**
     * Gets the attribute value for HIERARCHY_ID using the alias name HierarchyId.
     * @return the HIERARCHY_ID
     */
    public Number getHierarchyId() {
        return (Number) getAttributeInternal(HIERARCHYID);
    }

    /**
     * Sets <code>value</code> as attribute value for HIERARCHY_ID using the alias name HierarchyId.
     * @param value value to set the HIERARCHY_ID
     */
    public void setHierarchyId(Number value) {
        setAttributeInternal(HIERARCHYID, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber.
     * @return the OBJECT_VERSION_NUMBER
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Gets the attribute value for PARENT_ASSET_ID using the alias name ParentAssetId.
     * @return the PARENT_ASSET_ID
     */
    public Number getParentAssetId() {
        return (Number) getAttributeInternal(PARENTASSETID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARENT_ASSET_ID using the alias name ParentAssetId.
     * @param value value to set the PARENT_ASSET_ID
     */
    public void setParentAssetId(Number value) {
        setAttributeInternal(PARENTASSETID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransParentAssetNumber.
     * @return the TransParentAssetNumber
     */
    public String getTransParentAssetNumber() {
        return (String) getAttributeInternal(TRANSPARENTASSETNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransParentAssetNumber.
     * @param value value to set the  TransParentAssetNumber
     */
    public void setTransParentAssetNumber(String value) {
        setAttributeInternal(TRANSPARENTASSETNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransParentAssetDescr.
     * @return the TransParentAssetDescr
     */
    public String getTransParentAssetDescr() {
        return (String) getAttributeInternal(TRANSPARENTASSETDESCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransParentAssetDescr.
     * @param value value to set the  TransParentAssetDescr
     */
    public void setTransParentAssetDescr(String value) {
        setAttributeInternal(TRANSPARENTASSETDESCR, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AssetLovVO1.
     */
    public RowSet getAssetLovVO1() {
        return (RowSet) getAttributeInternal(ASSETLOVVO1);
    }
}

