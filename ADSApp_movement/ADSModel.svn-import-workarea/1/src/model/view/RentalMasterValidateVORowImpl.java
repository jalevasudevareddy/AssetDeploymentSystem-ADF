package model.view;

import model.entity.XxadsRentalRateMasterEOImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 26 15:16:19 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RentalMasterValidateVORowImpl extends ViewRowImpl {


    public static final int ENTITY_XXADSRENTALRATEMASTEREO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        AssetCategoryId,
        BuId,
        CreatedBy,
        CreationDate,
        Division,
        EffectiveFromDate,
        EffectiveToDate,
        FlexValueId,
        FlexValueSetId,
        FuelOption,
        HiringRuleId,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        OperatorOption,
        Ot1Rate,
        Ot2Rate,
        RateId,
        StandardRate,
        TransFlexValueId,
        RentalType,
        UnitRate;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ASSETCATEGORYID = AttributesEnum.AssetCategoryId.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int EFFECTIVEFROMDATE = AttributesEnum.EffectiveFromDate.index();
    public static final int EFFECTIVETODATE = AttributesEnum.EffectiveToDate.index();
    public static final int FLEXVALUEID = AttributesEnum.FlexValueId.index();
    public static final int FLEXVALUESETID = AttributesEnum.FlexValueSetId.index();
    public static final int FUELOPTION = AttributesEnum.FuelOption.index();
    public static final int HIRINGRULEID = AttributesEnum.HiringRuleId.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int OPERATOROPTION = AttributesEnum.OperatorOption.index();
    public static final int OT1RATE = AttributesEnum.Ot1Rate.index();
    public static final int OT2RATE = AttributesEnum.Ot2Rate.index();
    public static final int RATEID = AttributesEnum.RateId.index();
    public static final int STANDARDRATE = AttributesEnum.StandardRate.index();
    public static final int TRANSFLEXVALUEID = AttributesEnum.TransFlexValueId.index();
    public static final int RENTALTYPE = AttributesEnum.RentalType.index();
    public static final int UNITRATE = AttributesEnum.UnitRate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RentalMasterValidateVORowImpl() {
    }

    /**
     * Gets XxadsRentalRateMasterEO entity object.
     * @return the XxadsRentalRateMasterEO
     */
    public XxadsRentalRateMasterEOImpl getXxadsRentalRateMasterEO() {
        return (XxadsRentalRateMasterEOImpl) getEntity(ENTITY_XXADSRENTALRATEMASTEREO);
    }

    /**
     * Gets the attribute value for ASSET_CATEGORY_ID using the alias name AssetCategoryId.
     * @return the ASSET_CATEGORY_ID
     */
    public Number getAssetCategoryId() {
        return (Number) getAttributeInternal(ASSETCATEGORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSET_CATEGORY_ID using the alias name AssetCategoryId.
     * @param value value to set the ASSET_CATEGORY_ID
     */
    public void setAssetCategoryId(Number value) {
        setAttributeInternal(ASSETCATEGORYID, value);
    }

    /**
     * Gets the attribute value for BU_ID using the alias name BuId.
     * @return the BU_ID
     */
    public Number getBuId() {
        return (Number) getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as attribute value for BU_ID using the alias name BuId.
     * @param value value to set the BU_ID
     */
    public void setBuId(Number value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for DIVISION using the alias name Division.
     * @return the DIVISION
     */
    public String getDivision() {
        return (String) getAttributeInternal(DIVISION);
    }

    /**
     * Sets <code>value</code> as attribute value for DIVISION using the alias name Division.
     * @param value value to set the DIVISION
     */
    public void setDivision(String value) {
        setAttributeInternal(DIVISION, value);
    }

    /**
     * Gets the attribute value for EFFECTIVE_FROM_DATE using the alias name EffectiveFromDate.
     * @return the EFFECTIVE_FROM_DATE
     */
    public Date getEffectiveFromDate() {
        return (Date) getAttributeInternal(EFFECTIVEFROMDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EFFECTIVE_FROM_DATE using the alias name EffectiveFromDate.
     * @param value value to set the EFFECTIVE_FROM_DATE
     */
    public void setEffectiveFromDate(Date value) {
        setAttributeInternal(EFFECTIVEFROMDATE, value);
    }

    /**
     * Gets the attribute value for EFFECTIVE_TO_DATE using the alias name EffectiveToDate.
     * @return the EFFECTIVE_TO_DATE
     */
    public Date getEffectiveToDate() {
        return (Date) getAttributeInternal(EFFECTIVETODATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EFFECTIVE_TO_DATE using the alias name EffectiveToDate.
     * @param value value to set the EFFECTIVE_TO_DATE
     */
    public void setEffectiveToDate(Date value) {
        setAttributeInternal(EFFECTIVETODATE, value);
    }

    /**
     * Gets the attribute value for FLEX_VALUE_ID using the alias name FlexValueId.
     * @return the FLEX_VALUE_ID
     */
    public Number getFlexValueId() {
        return (Number) getAttributeInternal(FLEXVALUEID);
    }

    /**
     * Sets <code>value</code> as attribute value for FLEX_VALUE_ID using the alias name FlexValueId.
     * @param value value to set the FLEX_VALUE_ID
     */
    public void setFlexValueId(Number value) {
        setAttributeInternal(FLEXVALUEID, value);
    }

    /**
     * Gets the attribute value for FLEX_VALUE_SET_ID using the alias name FlexValueSetId.
     * @return the FLEX_VALUE_SET_ID
     */
    public Number getFlexValueSetId() {
        return (Number) getAttributeInternal(FLEXVALUESETID);
    }

    /**
     * Sets <code>value</code> as attribute value for FLEX_VALUE_SET_ID using the alias name FlexValueSetId.
     * @param value value to set the FLEX_VALUE_SET_ID
     */
    public void setFlexValueSetId(Number value) {
        setAttributeInternal(FLEXVALUESETID, value);
    }

    /**
     * Gets the attribute value for FUEL_OPTION using the alias name FuelOption.
     * @return the FUEL_OPTION
     */
    public String getFuelOption() {
        return (String) getAttributeInternal(FUELOPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for FUEL_OPTION using the alias name FuelOption.
     * @param value value to set the FUEL_OPTION
     */
    public void setFuelOption(String value) {
        setAttributeInternal(FUELOPTION, value);
    }

    /**
     * Gets the attribute value for HIRING_RULE_ID using the alias name HiringRuleId.
     * @return the HIRING_RULE_ID
     */
    public Number getHiringRuleId() {
        return (Number) getAttributeInternal(HIRINGRULEID);
    }

    /**
     * Sets <code>value</code> as attribute value for HIRING_RULE_ID using the alias name HiringRuleId.
     * @param value value to set the HIRING_RULE_ID
     */
    public void setHiringRuleId(Number value) {
        setAttributeInternal(HIRINGRULEID, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber.
     * @return the OBJECT_VERSION_NUMBER
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Gets the attribute value for OPERATOR_OPTION using the alias name OperatorOption.
     * @return the OPERATOR_OPTION
     */
    public String getOperatorOption() {
        return (String) getAttributeInternal(OPERATOROPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for OPERATOR_OPTION using the alias name OperatorOption.
     * @param value value to set the OPERATOR_OPTION
     */
    public void setOperatorOption(String value) {
        setAttributeInternal(OPERATOROPTION, value);
    }

    /**
     * Gets the attribute value for OT1_RATE using the alias name Ot1Rate.
     * @return the OT1_RATE
     */
    public Number getOt1Rate() {
        return (Number) getAttributeInternal(OT1RATE);
    }

    /**
     * Sets <code>value</code> as attribute value for OT1_RATE using the alias name Ot1Rate.
     * @param value value to set the OT1_RATE
     */
    public void setOt1Rate(Number value) {
        setAttributeInternal(OT1RATE, value);
    }

    /**
     * Gets the attribute value for OT2_RATE using the alias name Ot2Rate.
     * @return the OT2_RATE
     */
    public Number getOt2Rate() {
        return (Number) getAttributeInternal(OT2RATE);
    }

    /**
     * Sets <code>value</code> as attribute value for OT2_RATE using the alias name Ot2Rate.
     * @param value value to set the OT2_RATE
     */
    public void setOt2Rate(Number value) {
        setAttributeInternal(OT2RATE, value);
    }

    /**
     * Gets the attribute value for RATE_ID using the alias name RateId.
     * @return the RATE_ID
     */
    public Number getRateId() {
        return (Number) getAttributeInternal(RATEID);
    }

    /**
     * Sets <code>value</code> as attribute value for RATE_ID using the alias name RateId.
     * @param value value to set the RATE_ID
     */
    public void setRateId(Number value) {
        setAttributeInternal(RATEID, value);
    }

    /**
     * Gets the attribute value for STANDARD_RATE using the alias name StandardRate.
     * @return the STANDARD_RATE
     */
    public Number getStandardRate() {
        return (Number) getAttributeInternal(STANDARDRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for STANDARD_RATE using the alias name StandardRate.
     * @param value value to set the STANDARD_RATE
     */
    public void setStandardRate(Number value) {
        setAttributeInternal(STANDARDRATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransFlexValueId.
     * @return the TransFlexValueId
     */
    public Number getTransFlexValueId() {
        return (Number) getAttributeInternal(TRANSFLEXVALUEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransFlexValueId.
     * @param value value to set the  TransFlexValueId
     */
    public void setTransFlexValueId(Number value) {
        setAttributeInternal(TRANSFLEXVALUEID, value);
    }

    /**
     * Gets the attribute value for RENTAL_TYPE using the alias name RentalType.
     * @return the RENTAL_TYPE
     */
    public String getRentalType() {
        return (String) getAttributeInternal(RENTALTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for RENTAL_TYPE using the alias name RentalType.
     * @param value value to set the RENTAL_TYPE
     */
    public void setRentalType(String value) {
        setAttributeInternal(RENTALTYPE, value);
    }

    /**
     * Gets the attribute value for UNIT_RATE using the alias name UnitRate.
     * @return the UNIT_RATE
     */
    public Number getUnitRate() {
        return (Number) getAttributeInternal(UNITRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for UNIT_RATE using the alias name UnitRate.
     * @param value value to set the UNIT_RATE
     */
    public void setUnitRate(Number value) {
        setAttributeInternal(UNITRATE, value);
    }
}

