package model.view;

import model.entity.XxadsEmpCertificationsEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 02 16:36:46 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmployeeCertificationsVORowImpl extends ViewRowImpl {


    public static final int ENTITY_XXADSEMPCERTIFICATIONSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        CertificationId,
        CertificationType,
        CreatedBy,
        CreationDate,
        LastUpdateDate,
        LastUpdatedBy,
        MasterId,
        ObjectVersionNumber,
        ReferenceNo,
        Remarks,
        SubType,
        ValidFromDate,
        ValidToDate,
        TransCertificationType,
        TransSubType,
        LookupsLOV1,
        LookupsLOV2;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CERTIFICATIONID = AttributesEnum.CertificationId.index();
    public static final int CERTIFICATIONTYPE = AttributesEnum.CertificationType.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int MASTERID = AttributesEnum.MasterId.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int REFERENCENO = AttributesEnum.ReferenceNo.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int SUBTYPE = AttributesEnum.SubType.index();
    public static final int VALIDFROMDATE = AttributesEnum.ValidFromDate.index();
    public static final int VALIDTODATE = AttributesEnum.ValidToDate.index();
    public static final int TRANSCERTIFICATIONTYPE = AttributesEnum.TransCertificationType.index();
    public static final int TRANSSUBTYPE = AttributesEnum.TransSubType.index();
    public static final int LOOKUPSLOV1 = AttributesEnum.LookupsLOV1.index();
    public static final int LOOKUPSLOV2 = AttributesEnum.LookupsLOV2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EmployeeCertificationsVORowImpl() {
    }

    /**
     * Gets XxadsEmpCertificationsEO entity object.
     * @return the XxadsEmpCertificationsEO
     */
    public XxadsEmpCertificationsEOImpl getXxadsEmpCertificationsEO() {
        return (XxadsEmpCertificationsEOImpl) getEntity(ENTITY_XXADSEMPCERTIFICATIONSEO);
    }

    /**
     * Gets the attribute value for CERTIFICATION_ID using the alias name CertificationId.
     * @return the CERTIFICATION_ID
     */
    public Number getCertificationId() {
        return (Number) getAttributeInternal(CERTIFICATIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for CERTIFICATION_ID using the alias name CertificationId.
     * @param value value to set the CERTIFICATION_ID
     */
    public void setCertificationId(Number value) {
        setAttributeInternal(CERTIFICATIONID, value);
    }

    /**
     * Gets the attribute value for CERTIFICATION_TYPE using the alias name CertificationType.
     * @return the CERTIFICATION_TYPE
     */
    public String getCertificationType() {
        return (String) getAttributeInternal(CERTIFICATIONTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for CERTIFICATION_TYPE using the alias name CertificationType.
     * @param value value to set the CERTIFICATION_TYPE
     */
    public void setCertificationType(String value) {
        setAttributeInternal(CERTIFICATIONTYPE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for MASTER_ID using the alias name MasterId.
     * @return the MASTER_ID
     */
    public Number getMasterId() {
        return (Number) getAttributeInternal(MASTERID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_ID using the alias name MasterId.
     * @param value value to set the MASTER_ID
     */
    public void setMasterId(Number value) {
        setAttributeInternal(MASTERID, value);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber.
     * @return the OBJECT_VERSION_NUMBER
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Gets the attribute value for REFERENCE_NO using the alias name ReferenceNo.
     * @return the REFERENCE_NO
     */
    public String getReferenceNo() {
        return (String) getAttributeInternal(REFERENCENO);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_NO using the alias name ReferenceNo.
     * @param value value to set the REFERENCE_NO
     */
    public void setReferenceNo(String value) {
        setAttributeInternal(REFERENCENO, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for SUB_TYPE using the alias name SubType.
     * @return the SUB_TYPE
     */
    public String getSubType() {
        return (String) getAttributeInternal(SUBTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for SUB_TYPE using the alias name SubType.
     * @param value value to set the SUB_TYPE
     */
    public void setSubType(String value) {
        setAttributeInternal(SUBTYPE, value);
    }

    /**
     * Gets the attribute value for VALID_FROM_DATE using the alias name ValidFromDate.
     * @return the VALID_FROM_DATE
     */
    public Date getValidFromDate() {
        return (Date) getAttributeInternal(VALIDFROMDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_FROM_DATE using the alias name ValidFromDate.
     * @param value value to set the VALID_FROM_DATE
     */
    public void setValidFromDate(Date value) {
        setAttributeInternal(VALIDFROMDATE, value);
    }

    /**
     * Gets the attribute value for VALID_TO_DATE using the alias name ValidToDate.
     * @return the VALID_TO_DATE
     */
    public Date getValidToDate() {
        return (Date) getAttributeInternal(VALIDTODATE);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_TO_DATE using the alias name ValidToDate.
     * @param value value to set the VALID_TO_DATE
     */
    public void setValidToDate(Date value) {
        setAttributeInternal(VALIDTODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCertificationType.
     * @return the TransCertificationType
     */
    public String getTransCertificationType() {
        return (String) getAttributeInternal(TRANSCERTIFICATIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCertificationType.
     * @param value value to set the  TransCertificationType
     */
    public void setTransCertificationType(String value) {
        setAttributeInternal(TRANSCERTIFICATIONTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSubType.
     * @return the TransSubType
     */
    public String getTransSubType() {
        return (String) getAttributeInternal(TRANSSUBTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSubType.
     * @param value value to set the  TransSubType
     */
    public void setTransSubType(String value) {
        setAttributeInternal(TRANSSUBTYPE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LookupsLOV1.
     */
    public RowSet getLookupsLOV1() {
        return (RowSet) getAttributeInternal(LOOKUPSLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LookupsLOV2.
     */
    public RowSet getLookupsLOV2() {
        return (RowSet) getAttributeInternal(LOOKUPSLOV2);
    }
}

