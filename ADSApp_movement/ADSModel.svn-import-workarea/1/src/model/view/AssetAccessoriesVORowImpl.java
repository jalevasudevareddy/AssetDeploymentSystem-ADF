package model.view;

import model.entity.XxadsAssetAccessoriesEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 14 15:59:55 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AssetAccessoriesVORowImpl extends ViewRowImpl {
    public static final int ENTITY_XXADSASSETACCESSORIESEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        AccessoryId,
        AccessoryType,
        AssetId,
        AttachedFlag,
        CreatedBy,
        CreationDate,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        Quantity,
        TransAccessoryType,
        LookupsLOV1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ACCESSORYID = AttributesEnum.AccessoryId.index();
    public static final int ACCESSORYTYPE = AttributesEnum.AccessoryType.index();
    public static final int ASSETID = AttributesEnum.AssetId.index();
    public static final int ATTACHEDFLAG = AttributesEnum.AttachedFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int TRANSACCESSORYTYPE = AttributesEnum.TransAccessoryType.index();
    public static final int LOOKUPSLOV1 = AttributesEnum.LookupsLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AssetAccessoriesVORowImpl() {
    }

    /**
     * Gets XxadsAssetAccessoriesEO entity object.
     * @return the XxadsAssetAccessoriesEO
     */
    public XxadsAssetAccessoriesEOImpl getXxadsAssetAccessoriesEO() {
        return (XxadsAssetAccessoriesEOImpl) getEntity(ENTITY_XXADSASSETACCESSORIESEO);
    }

    /**
     * Gets the attribute value for ACCESSORY_ID using the alias name AccessoryId.
     * @return the ACCESSORY_ID
     */
    public Number getAccessoryId() {
        return (Number) getAttributeInternal(ACCESSORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ACCESSORY_ID using the alias name AccessoryId.
     * @param value value to set the ACCESSORY_ID
     */
    public void setAccessoryId(Number value) {
        setAttributeInternal(ACCESSORYID, value);
    }

    /**
     * Gets the attribute value for ACCESSORY_TYPE using the alias name AccessoryType.
     * @return the ACCESSORY_TYPE
     */
    public String getAccessoryType() {
        return (String) getAttributeInternal(ACCESSORYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACCESSORY_TYPE using the alias name AccessoryType.
     * @param value value to set the ACCESSORY_TYPE
     */
    public void setAccessoryType(String value) {
        setAttributeInternal(ACCESSORYTYPE, value);
    }

    /**
     * Gets the attribute value for ASSET_ID using the alias name AssetId.
     * @return the ASSET_ID
     */
    public Number getAssetId() {
        return (Number) getAttributeInternal(ASSETID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSET_ID using the alias name AssetId.
     * @param value value to set the ASSET_ID
     */
    public void setAssetId(Number value) {
        setAttributeInternal(ASSETID, value);
    }

    /**
     * Gets the attribute value for ATTACHED_FLAG using the alias name AttachedFlag.
     * @return the ATTACHED_FLAG
     */
    public String getAttachedFlag() {
        return (String) getAttributeInternal(ATTACHEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHED_FLAG using the alias name AttachedFlag.
     * @param value value to set the ATTACHED_FLAG
     */
    public void setAttachedFlag(String value) {
        setAttributeInternal(ATTACHEDFLAG, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber.
     * @return the OBJECT_VERSION_NUMBER
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Gets the attribute value for QUANTITY using the alias name Quantity.
     * @return the QUANTITY
     */
    public Number getQuantity() {
        return (Number) getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for QUANTITY using the alias name Quantity.
     * @param value value to set the QUANTITY
     */
    public void setQuantity(Number value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAccessoryType.
     * @return the TransAccessoryType
     */
    public String getTransAccessoryType() {
        return (String) getAttributeInternal(TRANSACCESSORYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAccessoryType.
     * @param value value to set the  TransAccessoryType
     */
    public void setTransAccessoryType(String value) {
        setAttributeInternal(TRANSACCESSORYTYPE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LookupsLOV1.
     */
    public RowSet getLookupsLOV1() {
        return (RowSet) getAttributeInternal(LOOKUPSLOV1);
    }
}

