package model.view;

import model.entity.XxadsExceptionDaysEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 11 17:10:28 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ExceptionDaysVORowImpl extends ViewRowImpl {


    public static final int ENTITY_XXADSEXCEPTIONDAYSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        BuId,
        CreatedBy,
        CreationDate,
        ExceptionDate,
        ExceptionId,
        ExceptionType,
        HolidayName,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        TransExceptionType,
        TransROFlag,
        LookupsLOV1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BUID = AttributesEnum.BuId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int EXCEPTIONDATE = AttributesEnum.ExceptionDate.index();
    public static final int EXCEPTIONID = AttributesEnum.ExceptionId.index();
    public static final int EXCEPTIONTYPE = AttributesEnum.ExceptionType.index();
    public static final int HOLIDAYNAME = AttributesEnum.HolidayName.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int TRANSEXCEPTIONTYPE = AttributesEnum.TransExceptionType.index();
    public static final int TRANSROFLAG = AttributesEnum.TransROFlag.index();
    public static final int LOOKUPSLOV1 = AttributesEnum.LookupsLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ExceptionDaysVORowImpl() {
    }

    /**
     * Gets XxadsExceptionDaysEO entity object.
     * @return the XxadsExceptionDaysEO
     */
    public XxadsExceptionDaysEOImpl getXxadsExceptionDaysEO() {
        return (XxadsExceptionDaysEOImpl) getEntity(ENTITY_XXADSEXCEPTIONDAYSEO);
    }

    /**
     * Gets the attribute value for BU_ID using the alias name BuId.
     * @return the BU_ID
     */
    public Number getBuId() {
        return (Number) getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as attribute value for BU_ID using the alias name BuId.
     * @param value value to set the BU_ID
     */
    public void setBuId(Number value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for EXCEPTION_DATE using the alias name ExceptionDate.
     * @return the EXCEPTION_DATE
     */
    public Date getExceptionDate() {
        return (Date) getAttributeInternal(EXCEPTIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXCEPTION_DATE using the alias name ExceptionDate.
     * @param value value to set the EXCEPTION_DATE
     */
    public void setExceptionDate(Date value) {
        setAttributeInternal(EXCEPTIONDATE, value);
    }

    /**
     * Gets the attribute value for EXCEPTION_ID using the alias name ExceptionId.
     * @return the EXCEPTION_ID
     */
    public Number getExceptionId() {
        return (Number) getAttributeInternal(EXCEPTIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for EXCEPTION_ID using the alias name ExceptionId.
     * @param value value to set the EXCEPTION_ID
     */
    public void setExceptionId(Number value) {
        setAttributeInternal(EXCEPTIONID, value);
    }

    /**
     * Gets the attribute value for EXCEPTION_TYPE using the alias name ExceptionType.
     * @return the EXCEPTION_TYPE
     */
    public String getExceptionType() {
        return (String) getAttributeInternal(EXCEPTIONTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXCEPTION_TYPE using the alias name ExceptionType.
     * @param value value to set the EXCEPTION_TYPE
     */
    public void setExceptionType(String value) {
        setAttributeInternal(EXCEPTIONTYPE, value);
    }

    /**
     * Gets the attribute value for HOLIDAY_NAME using the alias name HolidayName.
     * @return the HOLIDAY_NAME
     */
    public String getHolidayName() {
        return (String) getAttributeInternal(HOLIDAYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for HOLIDAY_NAME using the alias name HolidayName.
     * @param value value to set the HOLIDAY_NAME
     */
    public void setHolidayName(String value) {
        setAttributeInternal(HOLIDAYNAME, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber.
     * @return the OBJECT_VERSION_NUMBER
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Gets the attribute value for the calculated attribute TransExceptionType.
     * @return the TransExceptionType
     */
    public String getTransExceptionType() {
        return (String) getAttributeInternal(TRANSEXCEPTIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransExceptionType.
     * @param value value to set the  TransExceptionType
     */
    public void setTransExceptionType(String value) {
        setAttributeInternal(TRANSEXCEPTIONTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransROFlag.
     * @return the TransROFlag
     */
    public String getTransROFlag() {
        return (String) getAttributeInternal(TRANSROFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransROFlag.
     * @param value value to set the  TransROFlag
     */
    public void setTransROFlag(String value) {
        setAttributeInternal(TRANSROFLAG, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LookupsLOV1.
     */
    public RowSet getLookupsLOV1() {
        return (RowSet) getAttributeInternal(LOOKUPSLOV1);
    }
}

