package model.view;

import model.entity.XxAttachmentsEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 22 11:54:56 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AttachmentsVORowImpl extends ViewRowImpl {


    public static final int ENTITY_XXATTACHMENTSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ApproveFlag,
        AttachmentCode,
        AttachmentFile,
        AttachmentId,
        AttachmentType,
        Category,
        CreatedBy,
        CreationDate,
        ErrorMessage,
        FileName,
        FileType,
        ProcessFlag,
        ReferenceId,
        RfiId,
        Title,
        Url,
        WorkListId,
        TransCategory,
        AttachmentCategoryLovVO1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int APPROVEFLAG = AttributesEnum.ApproveFlag.index();
    public static final int ATTACHMENTCODE = AttributesEnum.AttachmentCode.index();
    public static final int ATTACHMENTFILE = AttributesEnum.AttachmentFile.index();
    public static final int ATTACHMENTID = AttributesEnum.AttachmentId.index();
    public static final int ATTACHMENTTYPE = AttributesEnum.AttachmentType.index();
    public static final int CATEGORY = AttributesEnum.Category.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int ERRORMESSAGE = AttributesEnum.ErrorMessage.index();
    public static final int FILENAME = AttributesEnum.FileName.index();
    public static final int FILETYPE = AttributesEnum.FileType.index();
    public static final int PROCESSFLAG = AttributesEnum.ProcessFlag.index();
    public static final int REFERENCEID = AttributesEnum.ReferenceId.index();
    public static final int RFIID = AttributesEnum.RfiId.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int URL = AttributesEnum.Url.index();
    public static final int WORKLISTID = AttributesEnum.WorkListId.index();
    public static final int TRANSCATEGORY = AttributesEnum.TransCategory.index();
    public static final int ATTACHMENTCATEGORYLOVVO1 = AttributesEnum.AttachmentCategoryLovVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AttachmentsVORowImpl() {
    }

    /**
     * Gets XxAttachmentsEO entity object.
     * @return the XxAttachmentsEO
     */
    public XxAttachmentsEOImpl getXxAttachmentsEO() {
        return (XxAttachmentsEOImpl) getEntity(ENTITY_XXATTACHMENTSEO);
    }

    /**
     * Gets the attribute value for APPROVE_FLAG using the alias name ApproveFlag.
     * @return the APPROVE_FLAG
     */
    public String getApproveFlag() {
        return (String) getAttributeInternal(APPROVEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for APPROVE_FLAG using the alias name ApproveFlag.
     * @param value value to set the APPROVE_FLAG
     */
    public void setApproveFlag(String value) {
        setAttributeInternal(APPROVEFLAG, value);
    }

    /**
     * Gets the attribute value for ATTACHMENT_CODE using the alias name AttachmentCode.
     * @return the ATTACHMENT_CODE
     */
    public String getAttachmentCode() {
        return (String) getAttributeInternal(ATTACHMENTCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHMENT_CODE using the alias name AttachmentCode.
     * @param value value to set the ATTACHMENT_CODE
     */
    public void setAttachmentCode(String value) {
        setAttributeInternal(ATTACHMENTCODE, value);
    }

    /**
     * Gets the attribute value for ATTACHMENT_FILE using the alias name AttachmentFile.
     * @return the ATTACHMENT_FILE
     */
    public BlobDomain getAttachmentFile() {
        return (BlobDomain) getAttributeInternal(ATTACHMENTFILE);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHMENT_FILE using the alias name AttachmentFile.
     * @param value value to set the ATTACHMENT_FILE
     */
    public void setAttachmentFile(BlobDomain value) {
        setAttributeInternal(ATTACHMENTFILE, value);
    }

    /**
     * Gets the attribute value for ATTACHMENT_ID using the alias name AttachmentId.
     * @return the ATTACHMENT_ID
     */
    public Number getAttachmentId() {
        return (Number) getAttributeInternal(ATTACHMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHMENT_ID using the alias name AttachmentId.
     * @param value value to set the ATTACHMENT_ID
     */
    public void setAttachmentId(Number value) {
        setAttributeInternal(ATTACHMENTID, value);
    }

    /**
     * Gets the attribute value for ATTACHMENT_TYPE using the alias name AttachmentType.
     * @return the ATTACHMENT_TYPE
     */
    public String getAttachmentType() {
        return (String) getAttributeInternal(ATTACHMENTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHMENT_TYPE using the alias name AttachmentType.
     * @param value value to set the ATTACHMENT_TYPE
     */
    public void setAttachmentType(String value) {
        setAttributeInternal(ATTACHMENTTYPE, value);
    }

    /**
     * Gets the attribute value for CATEGORY using the alias name Category.
     * @return the CATEGORY
     */
    public String getCategory() {
        return (String) getAttributeInternal(CATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for CATEGORY using the alias name Category.
     * @param value value to set the CATEGORY
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for ERROR_MESSAGE using the alias name ErrorMessage.
     * @return the ERROR_MESSAGE
     */
    public String getErrorMessage() {
        return (String) getAttributeInternal(ERRORMESSAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for ERROR_MESSAGE using the alias name ErrorMessage.
     * @param value value to set the ERROR_MESSAGE
     */
    public void setErrorMessage(String value) {
        setAttributeInternal(ERRORMESSAGE, value);
    }

    /**
     * Gets the attribute value for FILE_NAME using the alias name FileName.
     * @return the FILE_NAME
     */
    public String getFileName() {
        return (String) getAttributeInternal(FILENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FILE_NAME using the alias name FileName.
     * @param value value to set the FILE_NAME
     */
    public void setFileName(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**
     * Gets the attribute value for FILE_TYPE using the alias name FileType.
     * @return the FILE_TYPE
     */
    public String getFileType() {
        return (String) getAttributeInternal(FILETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for FILE_TYPE using the alias name FileType.
     * @param value value to set the FILE_TYPE
     */
    public void setFileType(String value) {
        setAttributeInternal(FILETYPE, value);
    }

    /**
     * Gets the attribute value for PROCESS_FLAG using the alias name ProcessFlag.
     * @return the PROCESS_FLAG
     */
    public String getProcessFlag() {
        return (String) getAttributeInternal(PROCESSFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for PROCESS_FLAG using the alias name ProcessFlag.
     * @param value value to set the PROCESS_FLAG
     */
    public void setProcessFlag(String value) {
        setAttributeInternal(PROCESSFLAG, value);
    }

    /**
     * Gets the attribute value for REFERENCE_ID using the alias name ReferenceId.
     * @return the REFERENCE_ID
     */
    public Number getReferenceId() {
        return (Number) getAttributeInternal(REFERENCEID);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_ID using the alias name ReferenceId.
     * @param value value to set the REFERENCE_ID
     */
    public void setReferenceId(Number value) {
        setAttributeInternal(REFERENCEID, value);
    }

    /**
     * Gets the attribute value for RFI_ID using the alias name RfiId.
     * @return the RFI_ID
     */
    public Number getRfiId() {
        return (Number) getAttributeInternal(RFIID);
    }

    /**
     * Sets <code>value</code> as attribute value for RFI_ID using the alias name RfiId.
     * @param value value to set the RFI_ID
     */
    public void setRfiId(Number value) {
        setAttributeInternal(RFIID, value);
    }

    /**
     * Gets the attribute value for TITLE using the alias name Title.
     * @return the TITLE
     */
    public String getTitle() {
        return (String) getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for TITLE using the alias name Title.
     * @param value value to set the TITLE
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for URL using the alias name Url.
     * @return the URL
     */
    public String getUrl() {
        return (String) getAttributeInternal(URL);
    }

    /**
     * Sets <code>value</code> as attribute value for URL using the alias name Url.
     * @param value value to set the URL
     */
    public void setUrl(String value) {
        setAttributeInternal(URL, value);
    }

    /**
     * Gets the attribute value for WORK_LIST_ID using the alias name WorkListId.
     * @return the WORK_LIST_ID
     */
    public Number getWorkListId() {
        return (Number) getAttributeInternal(WORKLISTID);
    }

    /**
     * Sets <code>value</code> as attribute value for WORK_LIST_ID using the alias name WorkListId.
     * @param value value to set the WORK_LIST_ID
     */
    public void setWorkListId(Number value) {
        setAttributeInternal(WORKLISTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCategory.
     * @return the TransCategory
     */
    public String getTransCategory() {
        return (String) getAttributeInternal(TRANSCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCategory.
     * @param value value to set the  TransCategory
     */
    public void setTransCategory(String value) {
        setAttributeInternal(TRANSCATEGORY, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AttachmentCategoryLovVO1.
     */
    public RowSet getAttachmentCategoryLovVO1() {
        return (RowSet) getAttributeInternal(ATTACHMENTCATEGORYLOVVO1);
    }
}

