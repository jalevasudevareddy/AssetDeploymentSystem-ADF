package model.progview;

import java.util.HashMap;

import oracle.jbo.RowSet;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ProgrammaticViewRowImpl;
import oracle.jbo.server.ViewAttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 10 16:19:57 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransTemplateVORowImpl extends ProgrammaticViewRowImpl {
    /**
     * createRowData - for custom java data source support.
     * Overridden to initialize the dataProvier for newly created row.
     * Used for updateable View Objects.
     */
    public Object createRowData(HashMap attrNameValueMap) {
        Object value = super.createRowData(attrNameValueMap);
        return value;
    }

    /**
     * convertToSourceType - for custom java data source support.
     * Overridden to provide custom implementation for conversions of a value
     * from attribute java type to datasource column/field type.
     * Not required in most cases.
     */
    public Object convertToSourceType(ViewAttributeDefImpl attrDef, String sourceType, Object val) {
        Object value = super.convertToSourceType(attrDef, sourceType, val);
        return value;
    }

    /**
     * convertToAttributeType - for custom java data source support.
     * Overridden to provide custom implementation for conversions of a value
     *  from datasource/column field type to attribute java type.
     * Not required in most cases.
     */
    public Object convertToAttributeType(ViewAttributeDefImpl attrDef, Class javaTypeClass, Object val) {
        Object value = super.convertToAttributeType(attrDef, javaTypeClass, val);
        return value;
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        TransTemplateName,
        TransTemplateId,
        TransCreatedBy,
        TransCreationDate,
        TransActiveFlag,
        TransActiveTemplateName,
        TransAciveTemplateInfo,
        TransBuName,
        TransBuId,
        TransDivision,
        TransDivisionRequired,
        TransDivSegment,
        TransDivFlexValueId,
        TemplatesLOV1,
        SystemOptionsBuLOV1,
        FlexValuesLOV1,
        ActiveTemplatesLovVO1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TRANSTEMPLATENAME = AttributesEnum.TransTemplateName.index();
    public static final int TRANSTEMPLATEID = AttributesEnum.TransTemplateId.index();
    public static final int TRANSCREATEDBY = AttributesEnum.TransCreatedBy.index();
    public static final int TRANSCREATIONDATE = AttributesEnum.TransCreationDate.index();
    public static final int TRANSACTIVEFLAG = AttributesEnum.TransActiveFlag.index();
    public static final int TRANSACTIVETEMPLATENAME = AttributesEnum.TransActiveTemplateName.index();
    public static final int TRANSACIVETEMPLATEINFO = AttributesEnum.TransAciveTemplateInfo.index();
    public static final int TRANSBUNAME = AttributesEnum.TransBuName.index();
    public static final int TRANSBUID = AttributesEnum.TransBuId.index();
    public static final int TRANSDIVISION = AttributesEnum.TransDivision.index();
    public static final int TRANSDIVISIONREQUIRED = AttributesEnum.TransDivisionRequired.index();
    public static final int TRANSDIVSEGMENT = AttributesEnum.TransDivSegment.index();
    public static final int TRANSDIVFLEXVALUEID = AttributesEnum.TransDivFlexValueId.index();
    public static final int TEMPLATESLOV1 = AttributesEnum.TemplatesLOV1.index();
    public static final int SYSTEMOPTIONSBULOV1 = AttributesEnum.SystemOptionsBuLOV1.index();
    public static final int FLEXVALUESLOV1 = AttributesEnum.FlexValuesLOV1.index();
    public static final int ACTIVETEMPLATESLOVVO1 = AttributesEnum.ActiveTemplatesLovVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TransTemplateVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute TransTemplateName.
     * @return the TransTemplateName
     */
    public String getTransTemplateName() {
        return (String) getAttributeInternal(TRANSTEMPLATENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTemplateName.
     * @param value value to set the  TransTemplateName
     */
    public void setTransTemplateName(String value) {
        setAttributeInternal(TRANSTEMPLATENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTemplateId.
     * @return the TransTemplateId
     */
    public Number getTransTemplateId() {
        return (Number) getAttributeInternal(TRANSTEMPLATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTemplateId.
     * @param value value to set the  TransTemplateId
     */
    public void setTransTemplateId(Number value) {
        setAttributeInternal(TRANSTEMPLATEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCreatedBy.
     * @return the TransCreatedBy
     */
    public String getTransCreatedBy() {
        return (String) getAttributeInternal(TRANSCREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCreatedBy.
     * @param value value to set the  TransCreatedBy
     */
    public void setTransCreatedBy(String value) {
        setAttributeInternal(TRANSCREATEDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCreationDate.
     * @return the TransCreationDate
     */
    public Date getTransCreationDate() {
        return (Date) getAttributeInternal(TRANSCREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCreationDate.
     * @param value value to set the  TransCreationDate
     */
    public void setTransCreationDate(Date value) {
        setAttributeInternal(TRANSCREATIONDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransActiveFlag.
     * @return the TransActiveFlag
     */
    public String getTransActiveFlag() {
        return (String) getAttributeInternal(TRANSACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransActiveFlag.
     * @param value value to set the  TransActiveFlag
     */
    public void setTransActiveFlag(String value) {
        setAttributeInternal(TRANSACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransActiveTemplateName.
     * @return the TransActiveTemplateName
     */
    public String getTransActiveTemplateName() {
        return (String) getAttributeInternal(TRANSACTIVETEMPLATENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransActiveTemplateName.
     * @param value value to set the  TransActiveTemplateName
     */
    public void setTransActiveTemplateName(String value) {
        setAttributeInternal(TRANSACTIVETEMPLATENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAciveTemplateInfo.
     * @return the TransAciveTemplateInfo
     */
    public String getTransAciveTemplateInfo() {
        return (String) getAttributeInternal(TRANSACIVETEMPLATEINFO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAciveTemplateInfo.
     * @param value value to set the  TransAciveTemplateInfo
     */
    public void setTransAciveTemplateInfo(String value) {
        setAttributeInternal(TRANSACIVETEMPLATEINFO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBuName.
     * @return the TransBuName
     */
    public String getTransBuName() {
        return (String) getAttributeInternal(TRANSBUNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBuName.
     * @param value value to set the  TransBuName
     */
    public void setTransBuName(String value) {
        setAttributeInternal(TRANSBUNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBuId.
     * @return the TransBuId
     */
    public Number getTransBuId() {
        return (Number) getAttributeInternal(TRANSBUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBuId.
     * @param value value to set the  TransBuId
     */
    public void setTransBuId(Number value) {
        setAttributeInternal(TRANSBUID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDivision.
     * @return the TransDivision
     */
    public String getTransDivision() {
        return (String) getAttributeInternal(TRANSDIVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDivision.
     * @param value value to set the  TransDivision
     */
    public void setTransDivision(String value) {
        setAttributeInternal(TRANSDIVISION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDivisionRequired.
     * @return the TransDivisionRequired
     */
    public String getTransDivisionRequired() {
        return (String) getAttributeInternal(TRANSDIVISIONREQUIRED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDivisionRequired.
     * @param value value to set the  TransDivisionRequired
     */
    public void setTransDivisionRequired(String value) {
        setAttributeInternal(TRANSDIVISIONREQUIRED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDivSegment.
     * @return the TransDivSegment
     */
    public Number getTransDivSegment() {
        return (Number) getAttributeInternal(TRANSDIVSEGMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDivSegment.
     * @param value value to set the  TransDivSegment
     */
    public void setTransDivSegment(Number value) {
        setAttributeInternal(TRANSDIVSEGMENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDivFlexValueId.
     * @return the TransDivFlexValueId
     */
    public Number getTransDivFlexValueId() {
        return (Number) getAttributeInternal(TRANSDIVFLEXVALUEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDivFlexValueId.
     * @param value value to set the  TransDivFlexValueId
     */
    public void setTransDivFlexValueId(Number value) {
        setAttributeInternal(TRANSDIVFLEXVALUEID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TemplatesLOV1.
     */
    public RowSet getTemplatesLOV1() {
        return (RowSet) getAttributeInternal(TEMPLATESLOV1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> SystemOptionsBuLOV1.
     */
    public RowSet getSystemOptionsBuLOV1() {
        return (RowSet) getAttributeInternal(SYSTEMOPTIONSBULOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> FlexValuesLOV1.
     */
    public RowSet getFlexValuesLOV1() {
        return (RowSet) getAttributeInternal(FLEXVALUESLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ActiveTemplatesLovVO1.
     */
    public RowSet getActiveTemplatesLovVO1() {
        return (RowSet) getAttributeInternal(ACTIVETEMPLATESLOVVO1);
    }
}

