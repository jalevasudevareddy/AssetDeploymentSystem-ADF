package model.masterEntity;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 11 18:04:17 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxadsHiringBasisRulesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        RuleId,
        HiringBasis,
        PeriodIdentifier,
        FixedVariable,
        NoOfDays,
        NoOfHours,
        Ot1Hours,
        Ot2Hours,
        ActiveFlag,
        CreationDate,
        CreatedBy,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        Description,
        TransHiringBasis,
        RentalType,
        BuId,
        Division,
        DivFlexValueId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    private static final byte USERNAME_HISTORY_TYPE = 13;

    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
            if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
                    // Custom History type logic goes here
                    return (String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
            }
            return super.getHistoryContextForAttribute(attr);
    }


    public static final int RULEID = AttributesEnum.RuleId.index();
    public static final int HIRINGBASIS = AttributesEnum.HiringBasis.index();
    public static final int PERIODIDENTIFIER = AttributesEnum.PeriodIdentifier.index();
    public static final int FIXEDVARIABLE = AttributesEnum.FixedVariable.index();
    public static final int NOOFDAYS = AttributesEnum.NoOfDays.index();
    public static final int NOOFHOURS = AttributesEnum.NoOfHours.index();
    public static final int OT1HOURS = AttributesEnum.Ot1Hours.index();
    public static final int OT2HOURS = AttributesEnum.Ot2Hours.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int TRANSHIRINGBASIS = AttributesEnum.TransHiringBasis.index();
    public static final int RENTALTYPE = AttributesEnum.RentalType.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int DIVFLEXVALUEID = AttributesEnum.DivFlexValueId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxadsHiringBasisRulesEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.masterEntity.XxadsHiringBasisRulesEO");
    }


    /**
     * Gets the attribute value for RuleId, using the alias name RuleId.
     * @return the value of RuleId
     */
    public Number getRuleId() {
        return (Number) getAttributeInternal(RULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RuleId.
     * @param value value to set the RuleId
     */
    public void setRuleId(Number value) {
        setAttributeInternal(RULEID, value);
    }

    /**
     * Gets the attribute value for HiringBasis, using the alias name HiringBasis.
     * @return the value of HiringBasis
     */
    public String getHiringBasis() {
        return (String) getAttributeInternal(HIRINGBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for HiringBasis.
     * @param value value to set the HiringBasis
     */
    public void setHiringBasis(String value) {
        setAttributeInternal(HIRINGBASIS, value);
    }

    /**
     * Gets the attribute value for PeriodIdentifier, using the alias name PeriodIdentifier.
     * @return the value of PeriodIdentifier
     */
    public String getPeriodIdentifier() {
        return (String) getAttributeInternal(PERIODIDENTIFIER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PeriodIdentifier.
     * @param value value to set the PeriodIdentifier
     */
    public void setPeriodIdentifier(String value) {
        setAttributeInternal(PERIODIDENTIFIER, value);
    }

    /**
     * Gets the attribute value for FixedVariable, using the alias name FixedVariable.
     * @return the value of FixedVariable
     */
    public String getFixedVariable() {
        return (String) getAttributeInternal(FIXEDVARIABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FixedVariable.
     * @param value value to set the FixedVariable
     */
    public void setFixedVariable(String value) {
        setAttributeInternal(FIXEDVARIABLE, value);
    }

    /**
     * Gets the attribute value for NoOfDays, using the alias name NoOfDays.
     * @return the value of NoOfDays
     */
    public Number getNoOfDays() {
        return (Number) getAttributeInternal(NOOFDAYS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfDays.
     * @param value value to set the NoOfDays
     */
    public void setNoOfDays(Number value) {
        setAttributeInternal(NOOFDAYS, value);
    }

    /**
     * Gets the attribute value for NoOfHours, using the alias name NoOfHours.
     * @return the value of NoOfHours
     */
    public Number getNoOfHours() {
        return (Number) getAttributeInternal(NOOFHOURS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfHours.
     * @param value value to set the NoOfHours
     */
    public void setNoOfHours(Number value) {
        setAttributeInternal(NOOFHOURS, value);
    }

    /**
     * Gets the attribute value for Ot1Hours, using the alias name Ot1Hours.
     * @return the value of Ot1Hours
     */
    public Number getOt1Hours() {
        return (Number) getAttributeInternal(OT1HOURS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ot1Hours.
     * @param value value to set the Ot1Hours
     */
    public void setOt1Hours(Number value) {
        setAttributeInternal(OT1HOURS, value);
    }

    /**
     * Gets the attribute value for Ot2Hours, using the alias name Ot2Hours.
     * @return the value of Ot2Hours
     */
    public Number getOt2Hours() {
        return (Number) getAttributeInternal(OT2HOURS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ot2Hours.
     * @param value value to set the Ot2Hours
     */
    public void setOt2Hours(Number value) {
        setAttributeInternal(OT2HOURS, value);
    }

    /**
     * Gets the attribute value for ActiveFlag, using the alias name ActiveFlag.
     * @return the value of ActiveFlag
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveFlag.
     * @param value value to set the ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the value of Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }


    /**
     * Gets the attribute value for TransHiringBasis, using the alias name TransHiringBasis.
     * @return the value of TransHiringBasis
     */
    public String getTransHiringBasis() {
        return (String) getAttributeInternal(TRANSHIRINGBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransHiringBasis.
     * @param value value to set the TransHiringBasis
     */
    public void setTransHiringBasis(String value) {
        setAttributeInternal(TRANSHIRINGBASIS, value);
    }


    /**
     * Gets the attribute value for RentalType, using the alias name RentalType.
     * @return the value of RentalType
     */
    public String getRentalType() {
        return (String) getAttributeInternal(RENTALTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RentalType.
     * @param value value to set the RentalType
     */
    public void setRentalType(String value) {
        setAttributeInternal(RENTALTYPE, value);
    }

    /**
     * Gets the attribute value for BuId, using the alias name BuId.
     * @return the value of BuId
     */
    public Number getBuId() {
        return (Number) getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuId.
     * @param value value to set the BuId
     */
    public void setBuId(Number value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for Division, using the alias name Division.
     * @return the value of Division
     */
    public String getDivision() {
        return (String) getAttributeInternal(DIVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Division.
     * @param value value to set the Division
     */
    public void setDivision(String value) {
        setAttributeInternal(DIVISION, value);
    }

    /**
     * Gets the attribute value for DivFlexValueId, using the alias name DivFlexValueId.
     * @return the value of DivFlexValueId
     */
    public Number getDivFlexValueId() {
        return (Number) getAttributeInternal(DIVFLEXVALUEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivFlexValueId.
     * @param value value to set the DivFlexValueId
     */
    public void setDivFlexValueId(Number value) {
        setAttributeInternal(DIVFLEXVALUEID, value);
    }


    /**
     * @param ruleId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number ruleId) {
        return new Key(new Object[] { ruleId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        SequenceImpl seq = new SequenceImpl("xxads_hiring_basis_rules_s", this.getDBTransaction());
        setRuleId(seq.getSequenceNumber());
        super.create(attributeList);
    }
}

