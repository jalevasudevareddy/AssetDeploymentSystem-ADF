package model.entity;


import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 19 14:11:40 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxadsBuAccountingParamsEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        HeaderId,
        BuId,
        Division,
        FlexValueId,
        FlexValueSetId,
        Source,
        SetupType,
        ArSourceId,
        ArTrxnTypeId,
        ArContext,
        UserJeSourceName,
        UserJeCategoryName,
        PaDocumentCategory,
        EffectiveFrom,
        EffectiveTo,
        CreationDate,
        CreatedBy,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        LineType,
        OrderType;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    
    private static final byte USERNAME_HISTORY_TYPE = 13;

    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
            if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
                    // Custom History type logic goes here
                    return (String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
            }
            return super.getHistoryContextForAttribute(attr);
    }


    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int FLEXVALUEID = AttributesEnum.FlexValueId.index();
    public static final int FLEXVALUESETID = AttributesEnum.FlexValueSetId.index();
    public static final int SOURCE = AttributesEnum.Source.index();
    public static final int SETUPTYPE = AttributesEnum.SetupType.index();
    public static final int ARSOURCEID = AttributesEnum.ArSourceId.index();
    public static final int ARTRXNTYPEID = AttributesEnum.ArTrxnTypeId.index();
    public static final int ARCONTEXT = AttributesEnum.ArContext.index();
    public static final int USERJESOURCENAME = AttributesEnum.UserJeSourceName.index();
    public static final int USERJECATEGORYNAME = AttributesEnum.UserJeCategoryName.index();
    public static final int PADOCUMENTCATEGORY = AttributesEnum.PaDocumentCategory.index();
    public static final int EFFECTIVEFROM = AttributesEnum.EffectiveFrom.index();
    public static final int EFFECTIVETO = AttributesEnum.EffectiveTo.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int LINETYPE = AttributesEnum.LineType.index();
    public static final int ORDERTYPE = AttributesEnum.OrderType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxadsBuAccountingParamsEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxadsBuAccountingParamsEO");
    }


    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the value of HeaderId
     */
    public oracle.jbo.domain.Number getHeaderId() {
        return (oracle.jbo.domain.Number) getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(oracle.jbo.domain.Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for BuId, using the alias name BuId.
     * @return the value of BuId
     */
    public Number getBuId() {
        return (Number) getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuId.
     * @param value value to set the BuId
     */
    public void setBuId(Number value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for Division, using the alias name Division.
     * @return the value of Division
     */
    public String getDivision() {
        return (String) getAttributeInternal(DIVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Division.
     * @param value value to set the Division
     */
    public void setDivision(String value) {
        setAttributeInternal(DIVISION, value);
    }

    /**
     * Gets the attribute value for FlexValueId, using the alias name FlexValueId.
     * @return the value of FlexValueId
     */
    public Number getFlexValueId() {
        return (Number) getAttributeInternal(FLEXVALUEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlexValueId.
     * @param value value to set the FlexValueId
     */
    public void setFlexValueId(Number value) {
        setAttributeInternal(FLEXVALUEID, value);
    }

    /**
     * Gets the attribute value for FlexValueSetId, using the alias name FlexValueSetId.
     * @return the value of FlexValueSetId
     */
    public Number getFlexValueSetId() {
        return (Number) getAttributeInternal(FLEXVALUESETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlexValueSetId.
     * @param value value to set the FlexValueSetId
     */
    public void setFlexValueSetId(Number value) {
        setAttributeInternal(FLEXVALUESETID, value);
    }

    /**
     * Gets the attribute value for Source, using the alias name Source.
     * @return the value of Source
     */
    public String getSource() {
        return (String) getAttributeInternal(SOURCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Source.
     * @param value value to set the Source
     */
    public void setSource(String value) {
        setAttributeInternal(SOURCE, value);
    }

    /**
     * Gets the attribute value for SetupType, using the alias name SetupType.
     * @return the value of SetupType
     */
    public String getSetupType() {
        return (String) getAttributeInternal(SETUPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SetupType.
     * @param value value to set the SetupType
     */
    public void setSetupType(String value) {
        setAttributeInternal(SETUPTYPE, value);
    }

    /**
     * Gets the attribute value for ArSourceId, using the alias name ArSourceId.
     * @return the value of ArSourceId
     */
    public Number getArSourceId() {
        return (Number) getAttributeInternal(ARSOURCEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArSourceId.
     * @param value value to set the ArSourceId
     */
    public void setArSourceId(Number value) {
        setAttributeInternal(ARSOURCEID, value);
    }

    /**
     * Gets the attribute value for ArTrxnTypeId, using the alias name ArTrxnTypeId.
     * @return the value of ArTrxnTypeId
     */
    public Number getArTrxnTypeId() {
        return (Number) getAttributeInternal(ARTRXNTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArTrxnTypeId.
     * @param value value to set the ArTrxnTypeId
     */
    public void setArTrxnTypeId(Number value) {
        setAttributeInternal(ARTRXNTYPEID, value);
    }

    /**
     * Gets the attribute value for ArContext, using the alias name ArContext.
     * @return the value of ArContext
     */
    public String getArContext() {
        return (String) getAttributeInternal(ARCONTEXT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArContext.
     * @param value value to set the ArContext
     */
    public void setArContext(String value) {
        setAttributeInternal(ARCONTEXT, value);
    }

    /**
     * Gets the attribute value for UserJeSourceName, using the alias name UserJeSourceName.
     * @return the value of UserJeSourceName
     */
    public String getUserJeSourceName() {
        return (String) getAttributeInternal(USERJESOURCENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserJeSourceName.
     * @param value value to set the UserJeSourceName
     */
    public void setUserJeSourceName(String value) {
        setAttributeInternal(USERJESOURCENAME, value);
    }

    /**
     * Gets the attribute value for UserJeCategoryName, using the alias name UserJeCategoryName.
     * @return the value of UserJeCategoryName
     */
    public String getUserJeCategoryName() {
        return (String) getAttributeInternal(USERJECATEGORYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserJeCategoryName.
     * @param value value to set the UserJeCategoryName
     */
    public void setUserJeCategoryName(String value) {
        setAttributeInternal(USERJECATEGORYNAME, value);
    }

    /**
     * Gets the attribute value for PaDocumentCategory, using the alias name PaDocumentCategory.
     * @return the value of PaDocumentCategory
     */
    public String getPaDocumentCategory() {
        return (String) getAttributeInternal(PADOCUMENTCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaDocumentCategory.
     * @param value value to set the PaDocumentCategory
     */
    public void setPaDocumentCategory(String value) {
        setAttributeInternal(PADOCUMENTCATEGORY, value);
    }

    /**
     * Gets the attribute value for EffectiveFrom, using the alias name EffectiveFrom.
     * @return the value of EffectiveFrom
     */
    public Date getEffectiveFrom() {
        return (Date) getAttributeInternal(EFFECTIVEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveFrom.
     * @param value value to set the EffectiveFrom
     */
    public void setEffectiveFrom(Date value) {
        setAttributeInternal(EFFECTIVEFROM, value);
    }

    /**
     * Gets the attribute value for EffectiveTo, using the alias name EffectiveTo.
     * @return the value of EffectiveTo
     */
    public Date getEffectiveTo() {
        return (Date) getAttributeInternal(EFFECTIVETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveTo.
     * @param value value to set the EffectiveTo
     */
    public void setEffectiveTo(Date value) {
        setAttributeInternal(EFFECTIVETO, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }


    /**
     * Gets the attribute value for LineType, using the alias name LineType.
     * @return the value of LineType
     */
    public String getLineType() {
        return (String) getAttributeInternal(LINETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineType.
     * @param value value to set the LineType
     */
    public void setLineType(String value) {
        setAttributeInternal(LINETYPE, value);
    }

    /**
     * Gets the attribute value for OrderType, using the alias name OrderType.
     * @return the value of OrderType
     */
    public String getOrderType() {
        return (String) getAttributeInternal(ORDERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrderType.
     * @param value value to set the OrderType
     */
    public void setOrderType(String value) {
        setAttributeInternal(ORDERTYPE, value);
    }

    /**
     * @param headerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number headerId) {
        return new Key(new Object[] { headerId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
        SequenceImpl seq = new SequenceImpl("xxads_bu_accounting_params_s", this.getDBTransaction());
        setHeaderId(seq.getSequenceNumber());
    }
}

