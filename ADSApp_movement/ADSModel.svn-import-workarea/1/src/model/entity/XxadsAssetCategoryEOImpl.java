package model.entity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 12 14:42:12 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxadsAssetCategoryEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        CategoryId,
        BuId,
        AssetCategory,
        Description,
        CategoryType,
        MobilizationFlag,
        UsagePool,
        InspectionCheck,
        HiringItemId,
        OrganizationId,
        ActiveFlag,
        FusionCategoryId,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        ObjectVersionNumber,
        Model,
        Capacity;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("XXADS_ASSET_CATEGORY_S",getDBTransaction());
        setCategoryId(seq.getSequenceNumber());
    //        setAttachmentCode("PROBATION CONFIRMATION");
    }
    
    private static final byte USERNAME_HISTORY_TYPE =13;
    
    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
    if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
       // Custom History type logic goes here
      return (String) ((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
    }
    return super.getHistoryContextForAttribute(attr);
    }


    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int ASSETCATEGORY = AttributesEnum.AssetCategory.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int CATEGORYTYPE = AttributesEnum.CategoryType.index();
    public static final int MOBILIZATIONFLAG = AttributesEnum.MobilizationFlag.index();
    public static final int USAGEPOOL = AttributesEnum.UsagePool.index();
    public static final int INSPECTIONCHECK = AttributesEnum.InspectionCheck.index();
    public static final int HIRINGITEMID = AttributesEnum.HiringItemId.index();
    public static final int ORGANIZATIONID = AttributesEnum.OrganizationId.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int FUSIONCATEGORYID = AttributesEnum.FusionCategoryId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int MODEL = AttributesEnum.Model.index();
    public static final int CAPACITY = AttributesEnum.Capacity.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxadsAssetCategoryEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxadsAssetCategoryEO");
    }


    /**
     * Gets the attribute value for CategoryId, using the alias name CategoryId.
     * @return the value of CategoryId
     */
    public Number getCategoryId() {
        return (Number) getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryId.
     * @param value value to set the CategoryId
     */
    public void setCategoryId(Number value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for BuId, using the alias name BuId.
     * @return the value of BuId
     */
    public Number getBuId() {
        return (Number) getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuId.
     * @param value value to set the BuId
     */
    public void setBuId(Number value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for AssetCategory, using the alias name AssetCategory.
     * @return the value of AssetCategory
     */
    public String getAssetCategory() {
        return (String) getAttributeInternal(ASSETCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetCategory.
     * @param value value to set the AssetCategory
     */
    public void setAssetCategory(String value) {
        setAttributeInternal(ASSETCATEGORY, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the value of Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for CategoryType, using the alias name CategoryType.
     * @return the value of CategoryType
     */
    public String getCategoryType() {
        return (String) getAttributeInternal(CATEGORYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryType.
     * @param value value to set the CategoryType
     */
    public void setCategoryType(String value) {
        setAttributeInternal(CATEGORYTYPE, value);
    }

    /**
     * Gets the attribute value for MobilizationFlag, using the alias name MobilizationFlag.
     * @return the value of MobilizationFlag
     */
    public String getMobilizationFlag() {
        return (String) getAttributeInternal(MOBILIZATIONFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for MobilizationFlag.
     * @param value value to set the MobilizationFlag
     */
    public void setMobilizationFlag(String value) {
        setAttributeInternal(MOBILIZATIONFLAG, value);
    }

    /**
     * Gets the attribute value for UsagePool, using the alias name UsagePool.
     * @return the value of UsagePool
     */
    public String getUsagePool() {
        return (String) getAttributeInternal(USAGEPOOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsagePool.
     * @param value value to set the UsagePool
     */
    public void setUsagePool(String value) {
        setAttributeInternal(USAGEPOOL, value);
    }

    /**
     * Gets the attribute value for InspectionCheck, using the alias name InspectionCheck.
     * @return the value of InspectionCheck
     */
    public String getInspectionCheck() {
        return (String) getAttributeInternal(INSPECTIONCHECK);
    }

    /**
     * Sets <code>value</code> as the attribute value for InspectionCheck.
     * @param value value to set the InspectionCheck
     */
    public void setInspectionCheck(String value) {
        setAttributeInternal(INSPECTIONCHECK, value);
    }

    /**
     * Gets the attribute value for HiringItemId, using the alias name HiringItemId.
     * @return the value of HiringItemId
     */
    public Number getHiringItemId() {
        return (Number) getAttributeInternal(HIRINGITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HiringItemId.
     * @param value value to set the HiringItemId
     */
    public void setHiringItemId(Number value) {
        setAttributeInternal(HIRINGITEMID, value);
    }

    /**
     * Gets the attribute value for OrganizationId, using the alias name OrganizationId.
     * @return the value of OrganizationId
     */
    public Number getOrganizationId() {
        return (Number) getAttributeInternal(ORGANIZATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrganizationId.
     * @param value value to set the OrganizationId
     */
    public void setOrganizationId(Number value) {
        setAttributeInternal(ORGANIZATIONID, value);
    }

    /**
     * Gets the attribute value for ActiveFlag, using the alias name ActiveFlag.
     * @return the value of ActiveFlag
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveFlag.
     * @param value value to set the ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for FusionCategoryId, using the alias name FusionCategoryId.
     * @return the value of FusionCategoryId
     */
    public Number getFusionCategoryId() {
        return (Number) getAttributeInternal(FUSIONCATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FusionCategoryId.
     * @param value value to set the FusionCategoryId
     */
    public void setFusionCategoryId(Number value) {
        setAttributeInternal(FUSIONCATEGORYID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Gets the attribute value for Model, using the alias name Model.
     * @return the value of Model
     */
    public String getModel() {
        return (String) getAttributeInternal(MODEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Model.
     * @param value value to set the Model
     */
    public void setModel(String value) {
        setAttributeInternal(MODEL, value);
    }

    /**
     * Gets the attribute value for Capacity, using the alias name Capacity.
     * @return the value of Capacity
     */
    public String getCapacity() {
        return (String) getAttributeInternal(CAPACITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Capacity.
     * @param value value to set the Capacity
     */
    public void setCapacity(String value) {
        setAttributeInternal(CAPACITY, value);
    }

    /**
     * @param categoryId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number categoryId) {
        return new Key(new Object[] { categoryId });
    }


}

