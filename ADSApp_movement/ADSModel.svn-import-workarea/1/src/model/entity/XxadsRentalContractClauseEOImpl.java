package model.entity;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 06 11:42:44 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxadsRentalContractClauseEOImpl extends EntityImpl {
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("xxads_rental_contract_clause_s", this.getDBTransaction());
        Number n = seq.getSequenceNumber();
        setClauseId(n);
        setParentClauseId(n);
        setMasterClauseId(n);
        setActiveFlag("N");
    }
    
    private static final byte USERNAME_HISTORY_TYPE = 13;

    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
        if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
                // Custom History type logic goes here
                return (String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
        }
        return super.getHistoryContextForAttribute(attr);
    }
    
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ClauseId,
        ContractId,
        Clause,
        ReferenceNote,
        ParentContractId,
        MasterContractId,
        ParentClauseId,
        MasterClauseId,
        ActiveFlag,
        CreationDate,
        CreatedBy,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLAUSEID = AttributesEnum.ClauseId.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int CLAUSE = AttributesEnum.Clause.index();
    public static final int REFERENCENOTE = AttributesEnum.ReferenceNote.index();
    public static final int PARENTCONTRACTID = AttributesEnum.ParentContractId.index();
    public static final int MASTERCONTRACTID = AttributesEnum.MasterContractId.index();
    public static final int PARENTCLAUSEID = AttributesEnum.ParentClauseId.index();
    public static final int MASTERCLAUSEID = AttributesEnum.MasterClauseId.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxadsRentalContractClauseEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxadsRentalContractClauseEO");
    }

    /**
     * Gets the attribute value for ClauseId, using the alias name ClauseId.
     * @return the value of ClauseId
     */
    public Number getClauseId() {
        return (Number) getAttributeInternal(CLAUSEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClauseId.
     * @param value value to set the ClauseId
     */
    public void setClauseId(Number value) {
        setAttributeInternal(CLAUSEID, value);
    }

    /**
     * Gets the attribute value for ContractId, using the alias name ContractId.
     * @return the value of ContractId
     */
    public Number getContractId() {
        return (Number) getAttributeInternal(CONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContractId.
     * @param value value to set the ContractId
     */
    public void setContractId(Number value) {
        setAttributeInternal(CONTRACTID, value);
    }

    /**
     * Gets the attribute value for Clause, using the alias name Clause.
     * @return the value of Clause
     */
    public String getClause() {
        return (String) getAttributeInternal(CLAUSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Clause.
     * @param value value to set the Clause
     */
    public void setClause(String value) {
        setAttributeInternal(CLAUSE, value);
    }

    /**
     * Gets the attribute value for ReferenceNote, using the alias name ReferenceNote.
     * @return the value of ReferenceNote
     */
    public String getReferenceNote() {
        return (String) getAttributeInternal(REFERENCENOTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReferenceNote.
     * @param value value to set the ReferenceNote
     */
    public void setReferenceNote(String value) {
        setAttributeInternal(REFERENCENOTE, value);
    }

    /**
     * Gets the attribute value for ParentContractId, using the alias name ParentContractId.
     * @return the value of ParentContractId
     */
    public Number getParentContractId() {
        return (Number) getAttributeInternal(PARENTCONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentContractId.
     * @param value value to set the ParentContractId
     */
    public void setParentContractId(Number value) {
        setAttributeInternal(PARENTCONTRACTID, value);
    }

    /**
     * Gets the attribute value for MasterContractId, using the alias name MasterContractId.
     * @return the value of MasterContractId
     */
    public Number getMasterContractId() {
        return (Number) getAttributeInternal(MASTERCONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterContractId.
     * @param value value to set the MasterContractId
     */
    public void setMasterContractId(Number value) {
        setAttributeInternal(MASTERCONTRACTID, value);
    }

    /**
     * Gets the attribute value for ParentClauseId, using the alias name ParentClauseId.
     * @return the value of ParentClauseId
     */
    public Number getParentClauseId() {
        return (Number) getAttributeInternal(PARENTCLAUSEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentClauseId.
     * @param value value to set the ParentClauseId
     */
    public void setParentClauseId(Number value) {
        setAttributeInternal(PARENTCLAUSEID, value);
    }

    /**
     * Gets the attribute value for MasterClauseId, using the alias name MasterClauseId.
     * @return the value of MasterClauseId
     */
    public Number getMasterClauseId() {
        return (Number) getAttributeInternal(MASTERCLAUSEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterClauseId.
     * @param value value to set the MasterClauseId
     */
    public void setMasterClauseId(Number value) {
        setAttributeInternal(MASTERCLAUSEID, value);
    }

    /**
     * Gets the attribute value for ActiveFlag, using the alias name ActiveFlag.
     * @return the value of ActiveFlag
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveFlag.
     * @param value value to set the ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * @param clauseId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number clauseId) {
        return new Key(new Object[] { clauseId });
    }


}

