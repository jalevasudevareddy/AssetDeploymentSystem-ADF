package model.entity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 22 09:36:03 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxadsDoLinesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        DoLineId,
        DoId,
        AllocationLineId,
        AllocationId,
        ContractLineId,
        MasterContractLineId,
        ContractId,
        MasterContractId,
        DoLineNum,
        AssetId,
        MeterReading,
        DeploymentDate,
        EmployeeType,
        EmployeeId,
        CreationDate,
        CreatedBy,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        RentalType,
        AllocationDetailId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOLINEID = AttributesEnum.DoLineId.index();
    public static final int DOID = AttributesEnum.DoId.index();
    public static final int ALLOCATIONLINEID = AttributesEnum.AllocationLineId.index();
    public static final int ALLOCATIONID = AttributesEnum.AllocationId.index();
    public static final int CONTRACTLINEID = AttributesEnum.ContractLineId.index();
    public static final int MASTERCONTRACTLINEID = AttributesEnum.MasterContractLineId.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int MASTERCONTRACTID = AttributesEnum.MasterContractId.index();
    public static final int DOLINENUM = AttributesEnum.DoLineNum.index();
    public static final int ASSETID = AttributesEnum.AssetId.index();
    public static final int METERREADING = AttributesEnum.MeterReading.index();
    public static final int DEPLOYMENTDATE = AttributesEnum.DeploymentDate.index();
    public static final int EMPLOYEETYPE = AttributesEnum.EmployeeType.index();
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int RENTALTYPE = AttributesEnum.RentalType.index();
    public static final int ALLOCATIONDETAILID = AttributesEnum.AllocationDetailId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxadsDoLinesEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxadsDoLinesEO");
    }


    /**
     * Gets the attribute value for DoLineId, using the alias name DoLineId.
     * @return the value of DoLineId
     */
    public oracle.jbo.domain.Number getDoLineId() {
        return (oracle.jbo.domain.Number) getAttributeInternal(DOLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoLineId.
     * @param value value to set the DoLineId
     */
    public void setDoLineId(oracle.jbo.domain.Number value) {
        setAttributeInternal(DOLINEID, value);
    }

    /**
     * Gets the attribute value for DoId, using the alias name DoId.
     * @return the value of DoId
     */
    public Number getDoId() {
        return (Number) getAttributeInternal(DOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoId.
     * @param value value to set the DoId
     */
    public void setDoId(Number value) {
        setAttributeInternal(DOID, value);
    }

    /**
     * Gets the attribute value for AllocationLineId, using the alias name AllocationLineId.
     * @return the value of AllocationLineId
     */
    public Number getAllocationLineId() {
        return (Number) getAttributeInternal(ALLOCATIONLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocationLineId.
     * @param value value to set the AllocationLineId
     */
    public void setAllocationLineId(Number value) {
        setAttributeInternal(ALLOCATIONLINEID, value);
    }

    /**
     * Gets the attribute value for AllocationId, using the alias name AllocationId.
     * @return the value of AllocationId
     */
    public Number getAllocationId() {
        return (Number) getAttributeInternal(ALLOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocationId.
     * @param value value to set the AllocationId
     */
    public void setAllocationId(Number value) {
        setAttributeInternal(ALLOCATIONID, value);
    }

    /**
     * Gets the attribute value for ContractLineId, using the alias name ContractLineId.
     * @return the value of ContractLineId
     */
    public Number getContractLineId() {
        return (Number) getAttributeInternal(CONTRACTLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContractLineId.
     * @param value value to set the ContractLineId
     */
    public void setContractLineId(Number value) {
        setAttributeInternal(CONTRACTLINEID, value);
    }

    /**
     * Gets the attribute value for MasterContractLineId, using the alias name MasterContractLineId.
     * @return the value of MasterContractLineId
     */
    public Number getMasterContractLineId() {
        return (Number) getAttributeInternal(MASTERCONTRACTLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterContractLineId.
     * @param value value to set the MasterContractLineId
     */
    public void setMasterContractLineId(Number value) {
        setAttributeInternal(MASTERCONTRACTLINEID, value);
    }

    /**
     * Gets the attribute value for ContractId, using the alias name ContractId.
     * @return the value of ContractId
     */
    public Number getContractId() {
        return (Number) getAttributeInternal(CONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContractId.
     * @param value value to set the ContractId
     */
    public void setContractId(Number value) {
        setAttributeInternal(CONTRACTID, value);
    }

    /**
     * Gets the attribute value for MasterContractId, using the alias name MasterContractId.
     * @return the value of MasterContractId
     */
    public Number getMasterContractId() {
        return (Number) getAttributeInternal(MASTERCONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterContractId.
     * @param value value to set the MasterContractId
     */
    public void setMasterContractId(Number value) {
        setAttributeInternal(MASTERCONTRACTID, value);
    }

    /**
     * Gets the attribute value for DoLineNum, using the alias name DoLineNum.
     * @return the value of DoLineNum
     */
    public Number getDoLineNum() {
        return (Number) getAttributeInternal(DOLINENUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoLineNum.
     * @param value value to set the DoLineNum
     */
    public void setDoLineNum(Number value) {
        setAttributeInternal(DOLINENUM, value);
    }

    /**
     * Gets the attribute value for AssetId, using the alias name AssetId.
     * @return the value of AssetId
     */
    public Number getAssetId() {
        return (Number) getAttributeInternal(ASSETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetId.
     * @param value value to set the AssetId
     */
    public void setAssetId(Number value) {
        setAttributeInternal(ASSETID, value);
    }

    /**
     * Gets the attribute value for MeterReading, using the alias name MeterReading.
     * @return the value of MeterReading
     */
    public Number getMeterReading() {
        return (Number) getAttributeInternal(METERREADING);
    }

    /**
     * Sets <code>value</code> as the attribute value for MeterReading.
     * @param value value to set the MeterReading
     */
    public void setMeterReading(Number value) {
        setAttributeInternal(METERREADING, value);
    }

    /**
     * Gets the attribute value for DeploymentDate, using the alias name DeploymentDate.
     * @return the value of DeploymentDate
     */
    public Date getDeploymentDate() {
        return (Date) getAttributeInternal(DEPLOYMENTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeploymentDate.
     * @param value value to set the DeploymentDate
     */
    public void setDeploymentDate(Date value) {
        setAttributeInternal(DEPLOYMENTDATE, value);
    }

    /**
     * Gets the attribute value for EmployeeType, using the alias name EmployeeType.
     * @return the value of EmployeeType
     */
    public String getEmployeeType() {
        return (String) getAttributeInternal(EMPLOYEETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeType.
     * @param value value to set the EmployeeType
     */
    public void setEmployeeType(String value) {
        setAttributeInternal(EMPLOYEETYPE, value);
    }

    /**
     * Gets the attribute value for EmployeeId, using the alias name EmployeeId.
     * @return the value of EmployeeId
     */
    public Number getEmployeeId() {
        return (Number) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeId.
     * @param value value to set the EmployeeId
     */
    public void setEmployeeId(Number value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ObjectVersionNumber.
     * @param value value to set the ObjectVersionNumber
     */
    public void setObjectVersionNumber(Number value) {
        setAttributeInternal(OBJECTVERSIONNUMBER, value);
    }


    /**
     * Gets the attribute value for RentalType, using the alias name RentalType.
     * @return the value of RentalType
     */
    public String getRentalType() {
        return (String) getAttributeInternal(RENTALTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RentalType.
     * @param value value to set the RentalType
     */
    public void setRentalType(String value) {
        setAttributeInternal(RENTALTYPE, value);
    }

    /**
     * Gets the attribute value for AllocationDetailId, using the alias name AllocationDetailId.
     * @return the value of AllocationDetailId
     */
    public Number getAllocationDetailId() {
        return (Number) getAttributeInternal(ALLOCATIONDETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocationDetailId.
     * @param value value to set the AllocationDetailId
     */
    public void setAllocationDetailId(Number value) {
        setAttributeInternal(ALLOCATIONDETAILID, value);
    }


    /**
     * @param doLineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number doLineId) {
        return new Key(new Object[] { doLineId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("XXADS_DO_LINES_S",getDBTransaction());
        setDoLineId(seq.getSequenceNumber());
    }
    
    private static final byte USERNAME_HISTORY_TYPE =13;
    
    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
        if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
            // Custom History type logic goes here
            return (String) ((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
        }
        return super.getHistoryContextForAttribute(attr);
    }
}

