package model.entity;


import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 27 18:18:30 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AssetDeploymentReceiptLinesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        DrLineId,
        DrId,
        DoLineId,
        DoId,
        AllocationLineId,
        AllocationId,
        ContractLineId,
        MasterContractLineId,
        ContractId,
        MasterContractId,
        DoLineNum,
        AssetId,
        ReceiptMeterReading,
        ReceiptDate,
        ReceivedBy,
        ReferenceNote,
        CreationDate,
        CreatedBy,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        AllocationDetailId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("XXADS_DR_LINES_S",getDBTransaction());
        setDrLineId(seq.getSequenceNumber());
    }
    
    private static final byte USERNAME_HISTORY_TYPE =13;
    
    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
    if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
       // Custom History type logic goes here
      return (String) ((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
    }
    return super.getHistoryContextForAttribute(attr);
    }


    public static final int DRLINEID = AttributesEnum.DrLineId.index();
    public static final int DRID = AttributesEnum.DrId.index();
    public static final int DOLINEID = AttributesEnum.DoLineId.index();
    public static final int DOID = AttributesEnum.DoId.index();
    public static final int ALLOCATIONLINEID = AttributesEnum.AllocationLineId.index();
    public static final int ALLOCATIONID = AttributesEnum.AllocationId.index();
    public static final int CONTRACTLINEID = AttributesEnum.ContractLineId.index();
    public static final int MASTERCONTRACTLINEID = AttributesEnum.MasterContractLineId.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int MASTERCONTRACTID = AttributesEnum.MasterContractId.index();
    public static final int DOLINENUM = AttributesEnum.DoLineNum.index();
    public static final int ASSETID = AttributesEnum.AssetId.index();
    public static final int RECEIPTMETERREADING = AttributesEnum.ReceiptMeterReading.index();
    public static final int RECEIPTDATE = AttributesEnum.ReceiptDate.index();
    public static final int RECEIVEDBY = AttributesEnum.ReceivedBy.index();
    public static final int REFERENCENOTE = AttributesEnum.ReferenceNote.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int ALLOCATIONDETAILID = AttributesEnum.AllocationDetailId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AssetDeploymentReceiptLinesEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.AssetDeploymentReceiptLinesEO");
    }


    /**
     * Gets the attribute value for DrLineId, using the alias name DrLineId.
     * @return the value of DrLineId
     */
    public Number getDrLineId() {
        return (Number) getAttributeInternal(DRLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DrLineId.
     * @param value value to set the DrLineId
     */
    public void setDrLineId(Number value) {
        setAttributeInternal(DRLINEID, value);
    }

    /**
     * Gets the attribute value for DrId, using the alias name DrId.
     * @return the value of DrId
     */
    public Number getDrId() {
        return (Number) getAttributeInternal(DRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DrId.
     * @param value value to set the DrId
     */
    public void setDrId(Number value) {
        setAttributeInternal(DRID, value);
    }

    /**
     * Gets the attribute value for DoLineId, using the alias name DoLineId.
     * @return the value of DoLineId
     */
    public Number getDoLineId() {
        return (Number) getAttributeInternal(DOLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoLineId.
     * @param value value to set the DoLineId
     */
    public void setDoLineId(Number value) {
        setAttributeInternal(DOLINEID, value);
    }

    /**
     * Gets the attribute value for DoId, using the alias name DoId.
     * @return the value of DoId
     */
    public Number getDoId() {
        return (Number) getAttributeInternal(DOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoId.
     * @param value value to set the DoId
     */
    public void setDoId(Number value) {
        setAttributeInternal(DOID, value);
    }

    /**
     * Gets the attribute value for AllocationLineId, using the alias name AllocationLineId.
     * @return the value of AllocationLineId
     */
    public Number getAllocationLineId() {
        return (Number) getAttributeInternal(ALLOCATIONLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocationLineId.
     * @param value value to set the AllocationLineId
     */
    public void setAllocationLineId(Number value) {
        setAttributeInternal(ALLOCATIONLINEID, value);
    }

    /**
     * Gets the attribute value for AllocationId, using the alias name AllocationId.
     * @return the value of AllocationId
     */
    public Number getAllocationId() {
        return (Number) getAttributeInternal(ALLOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocationId.
     * @param value value to set the AllocationId
     */
    public void setAllocationId(Number value) {
        setAttributeInternal(ALLOCATIONID, value);
    }

    /**
     * Gets the attribute value for ContractLineId, using the alias name ContractLineId.
     * @return the value of ContractLineId
     */
    public Number getContractLineId() {
        return (Number) getAttributeInternal(CONTRACTLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContractLineId.
     * @param value value to set the ContractLineId
     */
    public void setContractLineId(Number value) {
        setAttributeInternal(CONTRACTLINEID, value);
    }

    /**
     * Gets the attribute value for MasterContractLineId, using the alias name MasterContractLineId.
     * @return the value of MasterContractLineId
     */
    public Number getMasterContractLineId() {
        return (Number) getAttributeInternal(MASTERCONTRACTLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterContractLineId.
     * @param value value to set the MasterContractLineId
     */
    public void setMasterContractLineId(Number value) {
        setAttributeInternal(MASTERCONTRACTLINEID, value);
    }

    /**
     * Gets the attribute value for ContractId, using the alias name ContractId.
     * @return the value of ContractId
     */
    public Number getContractId() {
        return (Number) getAttributeInternal(CONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContractId.
     * @param value value to set the ContractId
     */
    public void setContractId(Number value) {
        setAttributeInternal(CONTRACTID, value);
    }

    /**
     * Gets the attribute value for MasterContractId, using the alias name MasterContractId.
     * @return the value of MasterContractId
     */
    public Number getMasterContractId() {
        return (Number) getAttributeInternal(MASTERCONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterContractId.
     * @param value value to set the MasterContractId
     */
    public void setMasterContractId(Number value) {
        setAttributeInternal(MASTERCONTRACTID, value);
    }

    /**
     * Gets the attribute value for DoLineNum, using the alias name DoLineNum.
     * @return the value of DoLineNum
     */
    public Number getDoLineNum() {
        return (Number) getAttributeInternal(DOLINENUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoLineNum.
     * @param value value to set the DoLineNum
     */
    public void setDoLineNum(Number value) {
        setAttributeInternal(DOLINENUM, value);
    }

    /**
     * Gets the attribute value for AssetId, using the alias name AssetId.
     * @return the value of AssetId
     */
    public Number getAssetId() {
        return (Number) getAttributeInternal(ASSETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetId.
     * @param value value to set the AssetId
     */
    public void setAssetId(Number value) {
        setAttributeInternal(ASSETID, value);
    }

    /**
     * Gets the attribute value for ReceiptMeterReading, using the alias name ReceiptMeterReading.
     * @return the value of ReceiptMeterReading
     */
    public Number getReceiptMeterReading() {
        return (Number) getAttributeInternal(RECEIPTMETERREADING);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiptMeterReading.
     * @param value value to set the ReceiptMeterReading
     */
    public void setReceiptMeterReading(Number value) {
        setAttributeInternal(RECEIPTMETERREADING, value);
    }

    /**
     * Gets the attribute value for ReceiptDate, using the alias name ReceiptDate.
     * @return the value of ReceiptDate
     */
    public Date getReceiptDate() {
        return (Date) getAttributeInternal(RECEIPTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiptDate.
     * @param value value to set the ReceiptDate
     */
    public void setReceiptDate(Date value) {
        setAttributeInternal(RECEIPTDATE, value);
    }

    /**
     * Gets the attribute value for ReceivedBy, using the alias name ReceivedBy.
     * @return the value of ReceivedBy
     */
    public Number getReceivedBy() {
        return (Number) getAttributeInternal(RECEIVEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceivedBy.
     * @param value value to set the ReceivedBy
     */
    public void setReceivedBy(Number value) {
        setAttributeInternal(RECEIVEDBY, value);
    }

    /**
     * Gets the attribute value for ReferenceNote, using the alias name ReferenceNote.
     * @return the value of ReferenceNote
     */
    public String getReferenceNote() {
        return (String) getAttributeInternal(REFERENCENOTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReferenceNote.
     * @param value value to set the ReferenceNote
     */
    public void setReferenceNote(String value) {
        setAttributeInternal(REFERENCENOTE, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Gets the attribute value for AllocationDetailId, using the alias name AllocationDetailId.
     * @return the value of AllocationDetailId
     */
    public Number getAllocationDetailId() {
        return (Number) getAttributeInternal(ALLOCATIONDETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllocationDetailId.
     * @param value value to set the AllocationDetailId
     */
    public void setAllocationDetailId(Number value) {
        setAttributeInternal(ALLOCATIONDETAILID, value);
    }

    /**
     * @param drLineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number drLineId) {
        return new Key(new Object[] { drLineId });
    }


}

