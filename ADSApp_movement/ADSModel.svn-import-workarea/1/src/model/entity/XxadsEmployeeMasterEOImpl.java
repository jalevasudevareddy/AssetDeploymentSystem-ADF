package model.entity;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 02 16:10:24 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxadsEmployeeMasterEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        MasterId,
        BuId,
        Division,
        DivFlexValueId,
        DivFlexValueSetId,
        EmployeeSource,
        EmployeeId,
        EmployeeNum,
        EmployeeName,
        CategoryId,
        DocumentNumber,
        MobileNumber,
        SupplierId,
        EffectiveFrom,
        EffectiveTo,
        CreationDate,
        CreatedBy,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber,
        DeploymentStatus;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    private static final byte USERNAME_HISTORY_TYPE = 13;

    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
        if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
                // Custom History type logic goes here
            return (String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
        }
        return super.getHistoryContextForAttribute(attr);
    }


    public static final int MASTERID = AttributesEnum.MasterId.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int DIVFLEXVALUEID = AttributesEnum.DivFlexValueId.index();
    public static final int DIVFLEXVALUESETID = AttributesEnum.DivFlexValueSetId.index();
    public static final int EMPLOYEESOURCE = AttributesEnum.EmployeeSource.index();
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int EMPLOYEENUM = AttributesEnum.EmployeeNum.index();
    public static final int EMPLOYEENAME = AttributesEnum.EmployeeName.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int DOCUMENTNUMBER = AttributesEnum.DocumentNumber.index();
    public static final int MOBILENUMBER = AttributesEnum.MobileNumber.index();
    public static final int SUPPLIERID = AttributesEnum.SupplierId.index();
    public static final int EFFECTIVEFROM = AttributesEnum.EffectiveFrom.index();
    public static final int EFFECTIVETO = AttributesEnum.EffectiveTo.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int DEPLOYMENTSTATUS = AttributesEnum.DeploymentStatus.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxadsEmployeeMasterEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxadsEmployeeMasterEO");
    }


    /**
     * Gets the attribute value for MasterId, using the alias name MasterId.
     * @return the value of MasterId
     */
    public oracle.jbo.domain.Number getMasterId() {
        return (oracle.jbo.domain.Number) getAttributeInternal(MASTERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MasterId.
     * @param value value to set the MasterId
     */
    public void setMasterId(oracle.jbo.domain.Number value) {
        setAttributeInternal(MASTERID, value);
    }

    /**
     * Gets the attribute value for BuId, using the alias name BuId.
     * @return the value of BuId
     */
    public Number getBuId() {
        return (Number) getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuId.
     * @param value value to set the BuId
     */
    public void setBuId(Number value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for Division, using the alias name Division.
     * @return the value of Division
     */
    public String getDivision() {
        return (String) getAttributeInternal(DIVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Division.
     * @param value value to set the Division
     */
    public void setDivision(String value) {
        setAttributeInternal(DIVISION, value);
    }

    /**
     * Gets the attribute value for DivFlexValueId, using the alias name DivFlexValueId.
     * @return the value of DivFlexValueId
     */
    public Number getDivFlexValueId() {
        return (Number) getAttributeInternal(DIVFLEXVALUEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivFlexValueId.
     * @param value value to set the DivFlexValueId
     */
    public void setDivFlexValueId(Number value) {
        setAttributeInternal(DIVFLEXVALUEID, value);
    }

    /**
     * Gets the attribute value for DivFlexValueSetId, using the alias name DivFlexValueSetId.
     * @return the value of DivFlexValueSetId
     */
    public Number getDivFlexValueSetId() {
        return (Number) getAttributeInternal(DIVFLEXVALUESETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivFlexValueSetId.
     * @param value value to set the DivFlexValueSetId
     */
    public void setDivFlexValueSetId(Number value) {
        setAttributeInternal(DIVFLEXVALUESETID, value);
    }

    /**
     * Gets the attribute value for EmployeeSource, using the alias name EmployeeSource.
     * @return the value of EmployeeSource
     */
    public String getEmployeeSource() {
        return (String) getAttributeInternal(EMPLOYEESOURCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeSource.
     * @param value value to set the EmployeeSource
     */
    public void setEmployeeSource(String value) {
        setAttributeInternal(EMPLOYEESOURCE, value);
    }

    /**
     * Gets the attribute value for EmployeeId, using the alias name EmployeeId.
     * @return the value of EmployeeId
     */
    public Number getEmployeeId() {
        return (Number) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeId.
     * @param value value to set the EmployeeId
     */
    public void setEmployeeId(Number value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for EmployeeNum, using the alias name EmployeeNum.
     * @return the value of EmployeeNum
     */
    public String getEmployeeNum() {
        return (String) getAttributeInternal(EMPLOYEENUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeNum.
     * @param value value to set the EmployeeNum
     */
    public void setEmployeeNum(String value) {
        setAttributeInternal(EMPLOYEENUM, value);
    }

    /**
     * Gets the attribute value for EmployeeName, using the alias name EmployeeName.
     * @return the value of EmployeeName
     */
    public String getEmployeeName() {
        return (String) getAttributeInternal(EMPLOYEENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeName.
     * @param value value to set the EmployeeName
     */
    public void setEmployeeName(String value) {
        setAttributeInternal(EMPLOYEENAME, value);
    }

    /**
     * Gets the attribute value for CategoryId, using the alias name CategoryId.
     * @return the value of CategoryId
     */
    public Number getCategoryId() {
        return (Number) getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryId.
     * @param value value to set the CategoryId
     */
    public void setCategoryId(Number value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for DocumentNumber, using the alias name DocumentNumber.
     * @return the value of DocumentNumber
     */
    public String getDocumentNumber() {
        return (String) getAttributeInternal(DOCUMENTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentNumber.
     * @param value value to set the DocumentNumber
     */
    public void setDocumentNumber(String value) {
        setAttributeInternal(DOCUMENTNUMBER, value);
    }

    /**
     * Gets the attribute value for MobileNumber, using the alias name MobileNumber.
     * @return the value of MobileNumber
     */
    public String getMobileNumber() {
        return (String) getAttributeInternal(MOBILENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for MobileNumber.
     * @param value value to set the MobileNumber
     */
    public void setMobileNumber(String value) {
        setAttributeInternal(MOBILENUMBER, value);
    }

    /**
     * Gets the attribute value for SupplierId, using the alias name SupplierId.
     * @return the value of SupplierId
     */
    public Number getSupplierId() {
        return (Number) getAttributeInternal(SUPPLIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupplierId.
     * @param value value to set the SupplierId
     */
    public void setSupplierId(Number value) {
        setAttributeInternal(SUPPLIERID, value);
    }

    /**
     * Gets the attribute value for EffectiveFrom, using the alias name EffectiveFrom.
     * @return the value of EffectiveFrom
     */
    public Date getEffectiveFrom() {
        return (Date) getAttributeInternal(EFFECTIVEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveFrom.
     * @param value value to set the EffectiveFrom
     */
    public void setEffectiveFrom(Date value) {
        setAttributeInternal(EFFECTIVEFROM, value);
    }

    /**
     * Gets the attribute value for EffectiveTo, using the alias name EffectiveTo.
     * @return the value of EffectiveTo
     */
    public Date getEffectiveTo() {
        return (Date) getAttributeInternal(EFFECTIVETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveTo.
     * @param value value to set the EffectiveTo
     */
    public void setEffectiveTo(Date value) {
        setAttributeInternal(EFFECTIVETO, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }


    /**
     * Gets the attribute value for DeploymentStatus, using the alias name DeploymentStatus.
     * @return the value of DeploymentStatus
     */
    public String getDeploymentStatus() {
        return (String) getAttributeInternal(DEPLOYMENTSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeploymentStatus.
     * @param value value to set the DeploymentStatus
     */
    public void setDeploymentStatus(String value) {
        setAttributeInternal(DEPLOYMENTSTATUS, value);
    }

    /**
     * @param masterId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number masterId) {
        return new Key(new Object[] { masterId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("xxads_employee_master_s", this.getDBTransaction());
        setMasterId(seq.getSequenceNumber());
    }
}

