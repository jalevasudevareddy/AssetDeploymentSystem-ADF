package model.entity;


import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 25 12:38:11 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxadsRentalRateMasterEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        RateId,
        BuId,
        Division,
        FlexValueId,
        FlexValueSetId,
        AssetCategoryId,
        HiringRuleId,
        OperatorOption,
        FuelOption,
        StandardRate,
        Ot1Rate,
        Ot2Rate,
        EffectiveFromDate,
        EffectiveToDate,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        ObjectVersionNumber,
        RentalType,
        FixedVariable,
        UnitRate;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RATEID = AttributesEnum.RateId.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int FLEXVALUEID = AttributesEnum.FlexValueId.index();
    public static final int FLEXVALUESETID = AttributesEnum.FlexValueSetId.index();
    public static final int ASSETCATEGORYID = AttributesEnum.AssetCategoryId.index();
    public static final int HIRINGRULEID = AttributesEnum.HiringRuleId.index();
    public static final int OPERATOROPTION = AttributesEnum.OperatorOption.index();
    public static final int FUELOPTION = AttributesEnum.FuelOption.index();
    public static final int STANDARDRATE = AttributesEnum.StandardRate.index();
    public static final int OT1RATE = AttributesEnum.Ot1Rate.index();
    public static final int OT2RATE = AttributesEnum.Ot2Rate.index();
    public static final int EFFECTIVEFROMDATE = AttributesEnum.EffectiveFromDate.index();
    public static final int EFFECTIVETODATE = AttributesEnum.EffectiveToDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int RENTALTYPE = AttributesEnum.RentalType.index();
    public static final int FIXEDVARIABLE = AttributesEnum.FixedVariable.index();
    public static final int UNITRATE = AttributesEnum.UnitRate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxadsRentalRateMasterEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxadsRentalRateMasterEO");
    }


    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("XXADS_RENTAL_RATE_MASTER_S",getDBTransaction());
        setRateId(seq.getSequenceNumber());
    //        setAttachmentCode("PROBATION CONFIRMATION");
    }
    
    private static final byte USERNAME_HISTORY_TYPE =13;
    
    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
    if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
       // Custom History type logic goes here
      return (String) ((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
    }
    return super.getHistoryContextForAttribute(attr);
    }


    /**
     * Gets the attribute value for RateId, using the alias name RateId.
     * @return the value of RateId
     */
    public Number getRateId() {
        return (Number) getAttributeInternal(RATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RateId.
     * @param value value to set the RateId
     */
    public void setRateId(Number value) {
        setAttributeInternal(RATEID, value);
    }

    /**
     * Gets the attribute value for BuId, using the alias name BuId.
     * @return the value of BuId
     */
    public Number getBuId() {
        return (Number) getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuId.
     * @param value value to set the BuId
     */
    public void setBuId(Number value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for Division, using the alias name Division.
     * @return the value of Division
     */
    public String getDivision() {
        return (String) getAttributeInternal(DIVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Division.
     * @param value value to set the Division
     */
    public void setDivision(String value) {
        setAttributeInternal(DIVISION, value);
    }

    /**
     * Gets the attribute value for FlexValueId, using the alias name FlexValueId.
     * @return the value of FlexValueId
     */
    public Number getFlexValueId() {
        return (Number) getAttributeInternal(FLEXVALUEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlexValueId.
     * @param value value to set the FlexValueId
     */
    public void setFlexValueId(Number value) {
        setAttributeInternal(FLEXVALUEID, value);
    }

    /**
     * Gets the attribute value for FlexValueSetId, using the alias name FlexValueSetId.
     * @return the value of FlexValueSetId
     */
    public Number getFlexValueSetId() {
        return (Number) getAttributeInternal(FLEXVALUESETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlexValueSetId.
     * @param value value to set the FlexValueSetId
     */
    public void setFlexValueSetId(Number value) {
        setAttributeInternal(FLEXVALUESETID, value);
    }

    /**
     * Gets the attribute value for AssetCategoryId, using the alias name AssetCategoryId.
     * @return the value of AssetCategoryId
     */
    public Number getAssetCategoryId() {
        return (Number) getAttributeInternal(ASSETCATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetCategoryId.
     * @param value value to set the AssetCategoryId
     */
    public void setAssetCategoryId(Number value) {
        setAttributeInternal(ASSETCATEGORYID, value);
    }

    /**
     * Gets the attribute value for HiringRuleId, using the alias name HiringRuleId.
     * @return the value of HiringRuleId
     */
    public Number getHiringRuleId() {
        return (Number) getAttributeInternal(HIRINGRULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HiringRuleId.
     * @param value value to set the HiringRuleId
     */
    public void setHiringRuleId(Number value) {
        setAttributeInternal(HIRINGRULEID, value);
    }

    /**
     * Gets the attribute value for OperatorOption, using the alias name OperatorOption.
     * @return the value of OperatorOption
     */
    public String getOperatorOption() {
        return (String) getAttributeInternal(OPERATOROPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperatorOption.
     * @param value value to set the OperatorOption
     */
    public void setOperatorOption(String value) {
        setAttributeInternal(OPERATOROPTION, value);
    }

    /**
     * Gets the attribute value for FuelOption, using the alias name FuelOption.
     * @return the value of FuelOption
     */
    public String getFuelOption() {
        return (String) getAttributeInternal(FUELOPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuelOption.
     * @param value value to set the FuelOption
     */
    public void setFuelOption(String value) {
        setAttributeInternal(FUELOPTION, value);
    }

    /**
     * Gets the attribute value for StandardRate, using the alias name StandardRate.
     * @return the value of StandardRate
     */
    public Number getStandardRate() {
        return (Number) getAttributeInternal(STANDARDRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StandardRate.
     * @param value value to set the StandardRate
     */
    public void setStandardRate(Number value) {
        setAttributeInternal(STANDARDRATE, value);
    }

    /**
     * Gets the attribute value for Ot1Rate, using the alias name Ot1Rate.
     * @return the value of Ot1Rate
     */
    public Number getOt1Rate() {
        return (Number) getAttributeInternal(OT1RATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ot1Rate.
     * @param value value to set the Ot1Rate
     */
    public void setOt1Rate(Number value) {
        setAttributeInternal(OT1RATE, value);
    }

    /**
     * Gets the attribute value for Ot2Rate, using the alias name Ot2Rate.
     * @return the value of Ot2Rate
     */
    public Number getOt2Rate() {
        return (Number) getAttributeInternal(OT2RATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ot2Rate.
     * @param value value to set the Ot2Rate
     */
    public void setOt2Rate(Number value) {
        setAttributeInternal(OT2RATE, value);
    }

    /**
     * Gets the attribute value for EffectiveFromDate, using the alias name EffectiveFromDate.
     * @return the value of EffectiveFromDate
     */
    public Date getEffectiveFromDate() {
        return (Date) getAttributeInternal(EFFECTIVEFROMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveFromDate.
     * @param value value to set the EffectiveFromDate
     */
    public void setEffectiveFromDate(Date value) {
        setAttributeInternal(EFFECTIVEFROMDATE, value);
    }

    /**
     * Gets the attribute value for EffectiveToDate, using the alias name EffectiveToDate.
     * @return the value of EffectiveToDate
     */
    public Date getEffectiveToDate() {
        return (Date) getAttributeInternal(EFFECTIVETODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveToDate.
     * @param value value to set the EffectiveToDate
     */
    public void setEffectiveToDate(Date value) {
        setAttributeInternal(EFFECTIVETODATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }


    /**
     * Gets the attribute value for RentalType, using the alias name RentalType.
     * @return the value of RentalType
     */
    public String getRentalType() {
        return (String) getAttributeInternal(RENTALTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RentalType.
     * @param value value to set the RentalType
     */
    public void setRentalType(String value) {
        setAttributeInternal(RENTALTYPE, value);
    }

    /**
     * Gets the attribute value for FixedVariable, using the alias name FixedVariable.
     * @return the value of FixedVariable
     */
    public String getFixedVariable() {
        return (String) getAttributeInternal(FIXEDVARIABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FixedVariable.
     * @param value value to set the FixedVariable
     */
    public void setFixedVariable(String value) {
        setAttributeInternal(FIXEDVARIABLE, value);
    }

    /**
     * Gets the attribute value for UnitRate, using the alias name UnitRate.
     * @return the value of UnitRate
     */
    public Number getUnitRate() {
        return (Number) getAttributeInternal(UNITRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnitRate.
     * @param value value to set the UnitRate
     */
    public void setUnitRate(Number value) {
        setAttributeInternal(UNITRATE, value);
    }

    /**
     * @param rateId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number rateId) {
        return new Key(new Object[] { rateId });
    }


}

