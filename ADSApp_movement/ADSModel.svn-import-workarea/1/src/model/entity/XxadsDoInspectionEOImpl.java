package model.entity;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 27 12:40:59 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxadsDoInspectionEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        DoInspectionId,
        DoLineId,
        DoId,
        AssetId,
        InspectionDate,
        InspectorEmpId,
        ReceiverEmpId,
        InspectionReason,
        InspectionRemarks,
        CreationDate,
        CreatedBy,
        LastUpdateDate,
        LastUpdatedBy,
        ObjectVersionNumber;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOINSPECTIONID = AttributesEnum.DoInspectionId.index();
    public static final int DOLINEID = AttributesEnum.DoLineId.index();
    public static final int DOID = AttributesEnum.DoId.index();
    public static final int ASSETID = AttributesEnum.AssetId.index();
    public static final int INSPECTIONDATE = AttributesEnum.InspectionDate.index();
    public static final int INSPECTOREMPID = AttributesEnum.InspectorEmpId.index();
    public static final int RECEIVEREMPID = AttributesEnum.ReceiverEmpId.index();
    public static final int INSPECTIONREASON = AttributesEnum.InspectionReason.index();
    public static final int INSPECTIONREMARKS = AttributesEnum.InspectionRemarks.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxadsDoInspectionEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxadsDoInspectionEO");
    }


    /**
     * Gets the attribute value for DoInspectionId, using the alias name DoInspectionId.
     * @return the value of DoInspectionId
     */
    public oracle.jbo.domain.Number getDoInspectionId() {
        return (oracle.jbo.domain.Number) getAttributeInternal(DOINSPECTIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoInspectionId.
     * @param value value to set the DoInspectionId
     */
    public void setDoInspectionId(oracle.jbo.domain.Number value) {
        setAttributeInternal(DOINSPECTIONID, value);
    }

    /**
     * Gets the attribute value for DoLineId, using the alias name DoLineId.
     * @return the value of DoLineId
     */
    public Number getDoLineId() {
        return (Number) getAttributeInternal(DOLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoLineId.
     * @param value value to set the DoLineId
     */
    public void setDoLineId(Number value) {
        setAttributeInternal(DOLINEID, value);
    }

    /**
     * Gets the attribute value for DoId, using the alias name DoId.
     * @return the value of DoId
     */
    public Number getDoId() {
        return (Number) getAttributeInternal(DOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoId.
     * @param value value to set the DoId
     */
    public void setDoId(Number value) {
        setAttributeInternal(DOID, value);
    }

    /**
     * Gets the attribute value for AssetId, using the alias name AssetId.
     * @return the value of AssetId
     */
    public Number getAssetId() {
        return (Number) getAttributeInternal(ASSETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssetId.
     * @param value value to set the AssetId
     */
    public void setAssetId(Number value) {
        setAttributeInternal(ASSETID, value);
    }

    /**
     * Gets the attribute value for InspectionDate, using the alias name InspectionDate.
     * @return the value of InspectionDate
     */
    public Date getInspectionDate() {
        return (Date) getAttributeInternal(INSPECTIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InspectionDate.
     * @param value value to set the InspectionDate
     */
    public void setInspectionDate(Date value) {
        setAttributeInternal(INSPECTIONDATE, value);
    }

    /**
     * Gets the attribute value for InspectorEmpId, using the alias name InspectorEmpId.
     * @return the value of InspectorEmpId
     */
    public Number getInspectorEmpId() {
        return (Number) getAttributeInternal(INSPECTOREMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for InspectorEmpId.
     * @param value value to set the InspectorEmpId
     */
    public void setInspectorEmpId(Number value) {
        setAttributeInternal(INSPECTOREMPID, value);
    }

    /**
     * Gets the attribute value for ReceiverEmpId, using the alias name ReceiverEmpId.
     * @return the value of ReceiverEmpId
     */
    public Number getReceiverEmpId() {
        return (Number) getAttributeInternal(RECEIVEREMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiverEmpId.
     * @param value value to set the ReceiverEmpId
     */
    public void setReceiverEmpId(Number value) {
        setAttributeInternal(RECEIVEREMPID, value);
    }

    /**
     * Gets the attribute value for InspectionReason, using the alias name InspectionReason.
     * @return the value of InspectionReason
     */
    public String getInspectionReason() {
        return (String) getAttributeInternal(INSPECTIONREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for InspectionReason.
     * @param value value to set the InspectionReason
     */
    public void setInspectionReason(String value) {
        setAttributeInternal(INSPECTIONREASON, value);
    }

    /**
     * Gets the attribute value for InspectionRemarks, using the alias name InspectionRemarks.
     * @return the value of InspectionRemarks
     */
    public String getInspectionRemarks() {
        return (String) getAttributeInternal(INSPECTIONREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for InspectionRemarks.
     * @param value value to set the InspectionRemarks
     */
    public void setInspectionRemarks(String value) {
        setAttributeInternal(INSPECTIONREMARKS, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }


    /**
     * @param doInspectionId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number doInspectionId) {
        return new Key(new Object[] { doInspectionId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    SequenceImpl seq = new SequenceImpl("XXADS_DO_INSPECTION_S",getDBTransaction());
    setDoInspectionId(seq.getSequenceNumber());
    }
    
    private static final byte USERNAME_HISTORY_TYPE =13;
    
    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
    if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
        // Custom History type logic goes here
        return (String) ((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
    }
    return super.getHistoryContextForAttribute(attr);
    }
}

