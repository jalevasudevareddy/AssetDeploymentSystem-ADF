package model.lov;

import java.math.BigDecimal;

import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 09 16:08:25 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AllocationCustTypesLOVRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        LookupCode,
        Meaning,
        Description,
        LookupCodeId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LOOKUPCODE = AttributesEnum.LookupCode.index();
    public static final int MEANING = AttributesEnum.Meaning.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int LOOKUPCODEID = AttributesEnum.LookupCodeId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AllocationCustTypesLOVRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute LookupCode.
     * @return the LookupCode
     */
    public String getLookupCode() {
        return (String) getAttributeInternal(LOOKUPCODE);
    }

    /**
     * Gets the attribute value for the calculated attribute Meaning.
     * @return the Meaning
     */
    public String getMeaning() {
        return (String) getAttributeInternal(MEANING);
    }

    /**
     * Gets the attribute value for the calculated attribute Description.
     * @return the Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Gets the attribute value for the calculated attribute LookupCodeId.
     * @return the LookupCodeId
     */
    public oracle.jbo.domain.Number getLookupCodeId() {
        return (oracle.jbo.domain.Number) getAttributeInternal(LOOKUPCODEID);
    }
}

