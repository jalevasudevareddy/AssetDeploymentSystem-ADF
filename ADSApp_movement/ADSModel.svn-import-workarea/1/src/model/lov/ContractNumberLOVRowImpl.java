package model.lov;

import java.math.BigDecimal;

import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 12 09:59:25 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContractNumberLOVRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ContractNumber,
        ContractId,
        MasterContractId,
        CustomerType,
        CustomerTypeMeaning,
        ProjectId,
        ProjectName,
        Division,
        DivFlexValueId,
        DivFlexValSetId,
        DepartmentName,
        DepartmentCode,
        DeptFlexValueId,
        DeptFlexValueSetId,
        DeptName,
        CustomerId,
        CustomerName,
        CustSiteId,
        SiteUseId,
        CustomerSite;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CONTRACTNUMBER = AttributesEnum.ContractNumber.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int MASTERCONTRACTID = AttributesEnum.MasterContractId.index();
    public static final int CUSTOMERTYPE = AttributesEnum.CustomerType.index();
    public static final int CUSTOMERTYPEMEANING = AttributesEnum.CustomerTypeMeaning.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int PROJECTNAME = AttributesEnum.ProjectName.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int DIVFLEXVALUEID = AttributesEnum.DivFlexValueId.index();
    public static final int DIVFLEXVALSETID = AttributesEnum.DivFlexValSetId.index();
    public static final int DEPARTMENTNAME = AttributesEnum.DepartmentName.index();
    public static final int DEPARTMENTCODE = AttributesEnum.DepartmentCode.index();
    public static final int DEPTFLEXVALUEID = AttributesEnum.DeptFlexValueId.index();
    public static final int DEPTFLEXVALUESETID = AttributesEnum.DeptFlexValueSetId.index();
    public static final int DEPTNAME = AttributesEnum.DeptName.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int CUSTOMERNAME = AttributesEnum.CustomerName.index();
    public static final int CUSTSITEID = AttributesEnum.CustSiteId.index();
    public static final int SITEUSEID = AttributesEnum.SiteUseId.index();
    public static final int CUSTOMERSITE = AttributesEnum.CustomerSite.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ContractNumberLOVRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ContractNumber.
     * @return the ContractNumber
     */
    public String getContractNumber() {
        return (String) getAttributeInternal(CONTRACTNUMBER);
    }

    /**
     * Gets the attribute value for the calculated attribute ContractId.
     * @return the ContractId
     */
    public oracle.jbo.domain.Number getContractId() {
        return (oracle.jbo.domain.Number) getAttributeInternal(CONTRACTID);
    }

    /**
     * Gets the attribute value for the calculated attribute MasterContractId.
     * @return the MasterContractId
     */
    public BigDecimal getMasterContractId() {
        return (BigDecimal) getAttributeInternal(MASTERCONTRACTID);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerType.
     * @return the CustomerType
     */
    public String getCustomerType() {
        return (String) getAttributeInternal(CUSTOMERTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerTypeMeaning.
     * @return the CustomerTypeMeaning
     */
    public String getCustomerTypeMeaning() {
        return (String) getAttributeInternal(CUSTOMERTYPEMEANING);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectId.
     * @return the ProjectId
     */
    public Number getProjectId() {
        return (Number) getAttributeInternal(PROJECTID);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectName.
     * @return the ProjectName
     */
    public String getProjectName() {
        return (String) getAttributeInternal(PROJECTNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute Division.
     * @return the Division
     */
    public String getDivision() {
        return (String) getAttributeInternal(DIVISION);
    }

    /**
     * Gets the attribute value for the calculated attribute DivFlexValueId.
     * @return the DivFlexValueId
     */
    public Number getDivFlexValueId() {
        return (Number) getAttributeInternal(DIVFLEXVALUEID);
    }

    /**
     * Gets the attribute value for the calculated attribute DivFlexValSetId.
     * @return the DivFlexValSetId
     */
    public Number getDivFlexValSetId() {
        return (Number) getAttributeInternal(DIVFLEXVALSETID);
    }

    /**
     * Gets the attribute value for the calculated attribute DepartmentName.
     * @return the DepartmentName
     */
    public String getDepartmentName() {
        return (String) getAttributeInternal(DEPARTMENTNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute DepartmentCode.
     * @return the DepartmentCode
     */
    public String getDepartmentCode() {
        return (String) getAttributeInternal(DEPARTMENTCODE);
    }

    /**
     * Gets the attribute value for the calculated attribute DeptFlexValueId.
     * @return the DeptFlexValueId
     */
    public Number getDeptFlexValueId() {
        return (Number) getAttributeInternal(DEPTFLEXVALUEID);
    }

    /**
     * Gets the attribute value for the calculated attribute DeptFlexValueSetId.
     * @return the DeptFlexValueSetId
     */
    public Number getDeptFlexValueSetId() {
        return (Number) getAttributeInternal(DEPTFLEXVALUESETID);
    }

    /**
     * Gets the attribute value for the calculated attribute DeptName.
     * @return the DeptName
     */
    public String getDeptName() {
        return (String) getAttributeInternal(DEPTNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerId.
     * @return the CustomerId
     */
    public Number getCustomerId() {
        return (Number) getAttributeInternal(CUSTOMERID);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerName.
     * @return the CustomerName
     */
    public String getCustomerName() {
        return (String) getAttributeInternal(CUSTOMERNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute CustSiteId.
     * @return the CustSiteId
     */
    public Number getCustSiteId() {
        return (Number) getAttributeInternal(CUSTSITEID);
    }

    /**
     * Gets the attribute value for the calculated attribute SiteUseId.
     * @return the SiteUseId
     */
    public Number getSiteUseId() {
        return (Number) getAttributeInternal(SITEUSEID);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerSite.
     * @return the CustomerSite
     */
    public String getCustomerSite() {
        return (String) getAttributeInternal(CUSTOMERSITE);
    }
}

